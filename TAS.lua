local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v8,v9)local v10={};for v29=1, #v8 do v6(v10,v0(v4(v1(v2(v8,v29,v29 + 1 )),v1(v2(v9,1 + ((v29-1)% #v9) ,1 + ((v29-1)% #v9) + 1 )))%256 ));end return v5(v10);end do local v11=0 -0 ;local v12;local v13;local v14;local v15;local v16;local v17;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;while true do if (v11==(3 + 1)) then v28=nil;while true do if (v12==(0 -0)) then v13=tonumber;v14=string.byte;v15=string.char;v16=string.sub;v12=1 + 0 ;end if (v12==4) then v28=function(v35,v36,...)local v44=3 -2 ;local v45;v35=v17(v16(v35,1 + 4 ),v7("\86\250","\120\212\191\61\69\100\52"),function(v46)if (v14(v46,2)==(146 -67)) then local v104=0 + 0 ;local v105;while true do if (v104==(0 -0)) then v105=0;while true do if (v105==(1000 -(989 + 11))) then local v138=0;while true do if (v138==(0 + 0)) then v45=v13(v16(v46,4 -3 ,1));return "";end end end end break;end end else local v106=0;local v107;local v108;while true do if (v106==(1 + 0)) then while true do if ((1967 -(376 + 1591))==v107) then v108=v15(v13(v46,76 -60 ));if v45 then local v155=0;local v156;local v157;while true do if (v155==(0 -0)) then v156=1526 -(667 + 859) ;v157=nil;v155=1;end if (v155==1) then while true do local v176=0 + 0 ;while true do if (v176==(0 -0)) then if ((1831 -(408 + 1422))==v156) then return v157;end if (v156==(0 + 0)) then local v189=0;while true do if ((1 -0)==v189) then v156=1238 -(1153 + 84) ;break;end if (v189==(219 -(188 + 31))) then v157=v18(v108,v45);v45=nil;v189=1 -0 ;end end end break;end end end break;end end else return v108;end break;end end break;end if (v106==(0 + 0)) then v107=1426 -(881 + 545) ;v108=nil;v106=1;end end end end);local function v47(v48,v49,v50)if v50 then local v109=0;local v110;while true do if (v109==(1404 -(121 + 1283))) then local v118=0 -0 ;local v119;while true do if (v118==(1604 -(1098 + 506))) then v119=1362 -(1209 + 153) ;while true do if (v119==(123 -(62 + 61))) then v110=(v48/(((3 + 1) -2)^(v49-(1726 -(517 + 1208)))))%(((2 + 0) -(0 -0))^(((v50-(1778 -(437 + 1340))) -(v49-(1 + 0))) + ((1206 -755) -((324 -207) + 333)))) ;return v110-(v110%((1 -0) + ((1188 -(73 + 1115)) -(0 + 0)))) ;end end break;end end end end else local v111=(0 -0) -0 ;local v112;while true do if (v111==(0 + 0)) then local v120=514 -(89 + 425) ;while true do if (v120==(0 + 0)) then v112=((2747 -((503 -323) + 128 + 545)) -(1690 + 89 + (536 -(319 + 104))))^(v49-((6511 -4812) -((142 -37) + (2895 -(99 + 1203))))) ;return (((v48%(v112 + v112))>=v112) and (1 -(0 + 0))) or ((507 -346) -((1055 -(187 + 806)) + (336 -237))) ;end end end end end end local function v51()local v64=0;local v65;local v66;while true do if (v64==(0 + 0)) then v65=1880 -(669 + (2303 -1092)) ;v66=nil;v64=1;end if (v64==(3 -2)) then while true do if (v65==((500 -(415 + 85)) -0)) then v66=v14(v35,v44,v44);v44=v44 + (1067 -(31 + (1150 -(222 + 796)) + 903)) ;v65=((231 -95) -(76 + (178 -120))) -(1 + 0) ;end if ((1254 -(375 + 878))==v65) then return v66;end end break;end end end local function v52()local v67=(1338 -725) -(((5494 -3797) -1327) + 243) ;local v68;local v69;while true do local v98=0 -0 ;local v99;while true do if ((1555 -(1336 + 219))==v98) then v99=0 -0 ;while true do if (v99==0) then if (v67==((2398 -(804 + 56)) -(75 + 43 + (1787 -(164 + 204))))) then return (v69 * ((5261 -3961) -((4 -2) + (1414 -(385 + 695)) + 708))) + v68 ;end if (v67==((0 + 0) -(0 -0))) then local v139=0 + 0 ;while true do if (v139==(1534 -(189 + 1345))) then v68,v69=v14(v35,v44,v44 + ((1877 -589) -(37 + 739 + (927 -(2373 -(754 + 1202))))) );v44=v44 + 2 ;v139=813 -(45 + 767) ;end if (v139==(1769 -(725 + 1043))) then v67=(1519 -(416 + 1102)) + 0 ;break;end end end break;end end break;end end end end local function v53()local v70,v71,v72,v73=v14(v35,v44,v44 + ((2331 -737) -((2559 -1537) + 92 + 477)) );v44=v44 + ((6 + 5) -((1036 -(228 + 800)) -(659 -(353 + 305)))) ;return (v73 * ((113065455 -71409077) -24879162)) + (v72 * (326574 -261038)) + (v71 * (1255 -999)) + v70 ;end local function v54()local v74=0 -(1374 -(1147 + 227)) ;local v75;local v76;local v77;local v78;local v79;local v80;while true do local v100=0 -0 ;local v101;while true do if (v100==(0 + 0)) then v101=0 -0 ;while true do if (v101==(2 -1)) then if (v74==((2927 -(757 + 638)) -(((3733 -2002) -((779 -(103 + 131)) + 977)) + (2993 -(519 + 1152))))) then local v140=0;while true do if (v140==(0 -0)) then v77=3 -(1025 -(232 + 791)) ;v78=(v47(v76,1 -0 ,(3431 -2191) -((2168 -(61 + 1116)) + (275 -46)) ) * (((1279 + 317) -((3083 -1501) + (22 -10)))^((59 -36) + (622 -(584 + 29))))) + v75 ;v140=1728 -(761 + 966) ;end if (v140==(1123 -(995 + 127))) then v74=911 -(228 + 41 + (1190 -(199 + 351))) ;break;end end end if (v74==(0 + ((1408 + 190) -((3252 -1881) + (890 -(191 + 472)))))) then local v141=683 -(462 + 221) ;local v142;local v143;while true do if (v141==(1045 -(818 + 226))) then while true do if (v142==(0 -0)) then v143=0 + 0 ;while true do if ((0 + 0)==v143) then v75=v53();v76=v53();v143=1;end if (v143==(288 -(123 + 164))) then v74=((325 -(161 + 162)) + 0) -1 ;break;end end break;end end break;end if (v141==(0 -0)) then v142=1321 -(966 + 355) ;v143=nil;v141=1 + 0 ;end end end break;end if (v101==0) then if (v74==((1328 -(882 + 442)) -2)) then v79=v47(v76,(405 + 736) -(931 + (604 -415)) ,2 + 1 + 28 );v80=((v47(v76,54 -((16 -10) + 16) )==(576 -(((2336 -1474) -325) + 33 + 5))) and  -((1408 -(281 + 764)) -((1027 -(700 + 318)) + (557 -(83 + 121))))) or ((2383 -(76 + 811)) -(((1042 + 77) -(329 + 17 + (498 -(80 + 28)))) + 304 + 808)) ;v74=(230 -((250 -170) + 143)) -4 ;end if (v74==3) then local v144=0;local v145;while true do if ((1913 -(1674 + 239))==v144) then v145=0 -0 ;while true do if (v145==0) then if (v79==((3032 -(841 + 545)) -((1580 -(1050 + 362)) + 1478))) then if (v78==((1662 + 267) -(1450 + 355 + 124))) then return v80 * (0 -0) ;else local v190=(0 -0) -(0 -0) ;while true do if (v190==((1843 -(1155 + 91)) -(115 + 275 + 207))) then v79=206 -(78 + 127) ;v77=0 -(252 -(168 + 84)) ;break;end end end elseif (v79==((9873 -6298) -((3186 -(1776 + 80)) + 198))) then return ((v78==(0 -0)) and (v80 * (((1 + (558 -(108 + 450))) -(0 -0))/(0 + (0 -0))))) or (v80 * NaN) ;end return v21(v80,v79-((4796 -2762) -((2731 -2008) + (426 -138))) ) * (v77 + (v78/((1731 -(1533 + 196))^(105 -((1508 -446) -((1766 -(5 + 940)) + (701 -(346 + 167)))))))) ;end end break;end end end v101=4 -3 ;end end break;end end end end local function v55(v56)local v81=25 -(15 + 10) ;local v82;local v83;while true do if ((618 -(517 + 101))==v81) then v82=nil;if  not v56 then v56=v53();if (v56==((0 -0) + (1920 -(1117 + 803)))) then return "";end end v81=1 -0 ;end if (v81==(1579 -(935 + 643))) then v82=v16(v35,v44,(v44 + v56) -1 );v44=v44 + v56 ;v81=2;end if (v81==(2 + 0)) then local v113=0;while true do if (v113==(819 -(479 + 340))) then v83={};for v130=1 + (938 -(214 + 724)) , #v82 do v83[v130]=v15(v14(v16(v82,v130,v130)));end v113=1409 -(801 + 607) ;end if (v113==(1 + 0)) then v81=81 -(7 + 71) ;break;end end end if (v81==(1746 -(1169 + 574))) then return v19(v83);end end end local v57=v53;local function v58(...)return {...},v25("#",...);end local function v59()local v84=(0 + 0) -(0 -0) ;local v85;local v86;local v87;local v88;local v89;local v90;local v91;local v92;local v93;while true do if (v84~=(1728 -((1778 -1072) + (1333 -(240 + 71))))) then else local v114=0;while true do if (v114==(3 -2)) then v84=1 -0 ;break;end if (v114==(0 -0)) then v85=(0 + 0) -0 ;v86=nil;v114=1 -0 ;end end end if (v84~=(1046 -((1312 -688) + (1198 -777)))) then else v87=nil;v88=nil;v84=2;end if (v84~=(156 -(22 + 89 + (162 -119)))) then else local v115=0 + 0 ;while true do if (v115==1) then v84=3 + 0 ;break;end if (v115==0) then v89=nil;v90=nil;v115=1;end end end if (((1263 -(158 + 146)) -(423 + 533))==v84) then v91=nil;v92=nil;v84=2 + 1 + 1 ;end if ((4 + 0)~=v84) then else v93=nil;while true do if (v85~=(1541 -((1403 -651) + (2694 -(813 + 1095))))) then else local v121=0 + 0 ;local v122;local v123;while true do if (v121==0) then v122=0 -0 ;v123=nil;v121=2 -1 ;end if (v121==(1 -0)) then while true do if (v122==(704 -(664 + 40))) then v123=0 + 0 ;while true do if (v123~=(1 + 0 + (0 -0))) then else v85=(124 + 303) -((580 -312) + (1759 -(1238 + 366))) ;break;end if (v123~=(1426 -(993 + 234 + 199))) then else local v177=0 + 0 ;while true do if (v177==0) then v92=nil;v93=nil;v177=1;end if (v177==1) then v123=(4 -2) -(2 -1) ;break;end end end end break;end end break;end end end if (v85~=(0 -(0 + 0))) then else local v124=0;local v125;while true do if (v124==0) then v125=860 -((2219 -(725 + 1162)) + 211 + 317) ;while true do if (v125~=0) then else local v171=0 -0 ;local v172;while true do if (v171==0) then v172=0;while true do if (v172==1) then v125=1 + 0 ;break;end if (v172==(0 + 0)) then v86=(157 -(156 + 1)) + 0 ;v87=nil;v172=1;end end break;end end end if (v125~=(954 -(552 + 401))) then else v85=1093 -(60 + 102 + 930) ;break;end end break;end end end if (v85~=(2 + 0 + (1841 -(531 + 1308)))) then else while true do if (v86~=(2 -(1 + 0))) then else local v146=0;local v147;while true do if (v146==(0 -0)) then v147=0;while true do if (v147~=((0 -0) + 0)) then else v89=nil;v90=nil;v147=(6 -2) -(1132 -(367 + 762)) ;end if (v147==(1 + 0)) then v86=2;break;end end break;end end end if (v86==(1 + 2 + (715 -(257 + 458)))) then v93=nil;while true do local v158=0 + 0 ;local v159;while true do if (v158==0) then v159=(0 -0) -(0 + 0) ;while true do if (v159~=(2 -(1 + 0))) then else if (v87~=((0 -0) + 0)) then else local v186=0;local v187;local v188;while true do if (v186==(0 -0)) then v187=617 -(315 + 98 + 204) ;v188=nil;v186=1;end if (v186==1) then while true do if (v187==(0 + 0)) then v188=(0 -0) + 0 + 0 ;while true do if (v188==((4061 -2066) -((136 -85) + 1943))) then local v205=0;local v206;while true do if (v205==(1953 -(870 + 1083))) then v206=1318 -(76 + 417 + 825) ;while true do if (v206==(974 -(440 + 534))) then local v224=1706 -(1530 + 176) ;local v225;while true do if (v224==(0 -0)) then v225=(882 + 521) -((944 -(47 + 120)) + 578 + 48) ;while true do if (((3 -2) -0)==v225) then v206=(354 -(190 + 163)) + (0 -0) ;break;end if (v225==(0 -0)) then local v397=0 -0 ;while true do if (v397==1) then v225=(29 -(8 + 20)) -(0 + 0) ;break;end if (v397==0) then v90={};v91={v88,v89,nil,v90};v397=1711 -(94 + 1616) ;end end end end break;end end end if (v206==(171 -(163 + 7))) then v188=4 -2 ;break;end end break;end end end if (v188~=(0 + 0)) then else local v207=0 + 0 + (121 -(94 + 27)) ;while true do if (v207==((1698 -(28 + 702)) -((466 -167) + 547 + 122))) then local v208=1754 -(76 + 1678) ;while true do if (v208==0) then v88={};v89={};v208=2 -1 ;end if ((1 + 0)==v208) then v207=3 -(6 -4) ;break;end end end if (v207~=1) then else v188=(1619 -1211) -((1046 -(699 + 127)) + 187) ;break;end end end if (((11 -6) -(2 + 1))==v188) then v87=(452 -(367 + 84)) + 0 + 0 ;break;end end break;end end break;end end end break;end if (v159==((65 + 276) -(84 + (2192 -(1251 + 684))))) then local v181=204 -(194 + 10) ;while true do if (v181==(0 -0)) then if (v87==(1100 -((959 -452) + 514 + 78))) then local v191=(3 + 18) -(19 + 2 + 0) ;while true do if (v191==((1312 + 625) -((1343 -(26 + 184)) + 804))) then v92=v53();v93={};v191=(2 -1) + 0 + 0 ;end if (v191==(1 + 0)) then local v197=0;local v198;local v199;while true do if (v197==(967 -(172 + 794))) then while true do if (v198==(1223 -(382 + 841))) then v199=0 + (359 -(105 + 254)) ;while true do if (v199==(1 + 0)) then v191=2 + 0 ;break;end if (v199~=0) then else local v226=(1329 -956) -((341 -(29 + 70)) + (576 -445)) ;while true do if (v226~=((0 -0) + 0 + 0)) then else local v377=1104 -(49 + 1055) ;while true do if (v377==1) then v226=(2 -1) + 0 ;break;end if (v377==(0 + 0)) then for v434=(3 -2) -(519 -(9 + 510)) ,v92 do local v435=1227 -((2215 -(1673 + 300)) + 985) ;local v436;local v437;while true do if (v435==((1 + 1) -(1 -0))) then if (v436==((4 -2) -1)) then v437=v51()~=(0 -0) ;elseif (v436==((7 -2) -3)) then v437=v54();elseif (v436==((1714 -(1586 + 123)) -(5 -3))) then v437=v55();end v93[v434]=v437;break;end if (v435~=(0 + 0 + 0)) then else local v477=0;local v478;while true do if (v477==(0 -0)) then v478=0;while true do if (v478==(4 -(425 -(48 + 374)))) then v435=1 + 0 ;break;end if (v478~=((1420 -(1022 + 398)) -(224 -(187 + 37)))) then else local v558=0 -0 ;local v559;while true do if (v558==(50 -(32 + 18))) then v559=0;while true do if (v559==0) then v436=v51();v437=nil;v559=1 + 0 ;end if (v559==(1 + 0)) then v478=(1660 -(973 + 686)) + 0 + 0 ;break;end end break;end end end end break;end end end end end v91[1315 -(464 + (1822 -974)) ]=v51();v377=1;end end end if (((284 -(142 + 138)) -3)~=v226) then else v199=1 + 0 + 0 + 0 ;break;end end end end break;end end break;end if (v197==(0 + 0)) then v198=0;v199=nil;v197=1;end end end if (2~=v191) then else v87=141 -(95 + 4 + 40) ;break;end end end if (v87~=(1 + 1)) then else local v192=(0 -0) -0 ;local v193;local v194;while true do if (v192~=1) then else while true do if (v193~=((1191 -(1017 + 174)) + 0)) then else v194=0 + 0 ;while true do if (v194==(1 + 0)) then local v209=0;local v210;while true do if (0==v209) then v210=(0 -0) -0 ;while true do if (((1609 -(183 + 1426)) + (1527 -(448 + 1079)))==v210) then local v378=0 -0 ;local v379;while true do if (v378==(0 -0)) then v379=0;while true do if (v379==(735 -(339 + 396))) then local v445=0 + 0 ;while true do if (0==v445) then for v528=(1755 -(957 + 797)) -0 ,v53() do v90[v528]=v53();end return v91;end end end end break;end end end end break;end end end if (v194~=0) then else local v211=1423 -(343 + 1080) ;local v212;local v213;while true do if (v211==(2 -1)) then while true do if (v212~=0) then else v213=0 + 0 + (507 -(7 + 500)) ;while true do if (v213~=0) then else local v399=0 -0 ;local v400;while true do if (v399==(0 -0)) then v400=0 + 0 + 0 ;while true do if (v400~=((3959 -2516) -((1421 -(454 + 628)) + (1946 -(581 + 262))))) then else v213=1 + 0 + 0 ;break;end if (((2352 -(297 + 56)) -(734 + 97 + 1168))~=v400) then else local v507=0 + 0 ;local v508;while true do if (0==v507) then v508=0;while true do if (v508==(0 + 0)) then for v584=201 -((22 -6) + (273 -89)) ,v53() do local v585=387 -(291 + 96) ;local v586;local v587;local v588;while true do if (v585==0) then local v603=0 + 0 ;while true do if (v603==(0 -0)) then local v621=1794 -(196 + 1598) ;while true do if (v621==1) then v603=1 + 0 ;break;end if (v621==(0 + 0)) then v586=1268 -((1961 -1188) + (1582 -1087)) ;v587=nil;v621=1 -0 ;end end end if (v603==(1 + 0)) then v585=1 + 0 ;break;end end end if (v585==(1 -0)) then v588=nil;while true do if (v586==((64 -(16 + 47)) + 0 + 0)) then while true do if (v587~=(0 + (1674 -(1173 + 501)))) then else v588=v51();if (v47(v588,1 + 0 + (0 -0) ,(3 -2) -0 )~=((1997 -(270 + 1727)) -0)) then else local v648=0 -0 ;local v649;local v650;local v651;local v652;local v653;local v654;local v655;while true do if (v648==(0 + 0)) then v649=0 + (784 -(582 + 202)) ;v650=nil;v648=1;end if (v648==(3 + 0)) then v655=nil;while true do if ((519 -(52 + 465))==v649) then v654=nil;v655=nil;v649=(1032 -(15 + 1010)) -(1 + 3) ;end if (v649~=1) then else local v672=0 -0 ;while true do if (v672==(4 -3)) then v649=1 + 1 + 0 ;break;end if (v672==(0 + 0)) then v652=nil;v653=nil;v672=1;end end end if (v649~=((693 -(404 + 286)) -(0 -0))) then else while true do if (v650~=((3842 -2369) -(211 + 728 + 385 + 147))) then else v655=nil;while true do if (v651==(3 -(4 -2))) then local v683=1457 -(777 + 680) ;local v684;local v685;while true do if (v683==(78 -(68 + 9))) then while true do if (v684~=(1520 -(240 + 1280))) then else v685=(246 -(111 + 135)) + (0 -0) ;while true do if (((0 + 0) -0)==v685) then local v702=0;while true do if (v702==(212 -(138 + 74))) then v654=nil;v655=nil;v702=1;end if (v702==1) then v685=(1042 -(601 + 439)) -(1 + 0) ;break;end end end if ((1 + 0 + 0)==v685) then v651=2 + 0 + 0 ;break;end end break;end end break;end if (v683==(0 -0)) then v684=(0 -0) + 0 ;v685=nil;v683=1 + 0 ;end end end if (v651==((930 + 762) -(265 + (1715 -(285 + 3))))) then v652=(0 + 0) -(135 -(72 + 63)) ;v653=nil;v651=(1972 -(1551 + 420)) + (460 -(402 + 58)) ;end if (v651==((1 + 4) -(3 + 0))) then while true do if (v652==((0 + 0) -(0 + 0))) then local v688=173 -(58 + 115) ;local v689;while true do if (v688==(0 + 0)) then v689=0 + 0 + 0 + 0 ;while true do if (v689~=(0 + 0)) then else local v703=640 -(525 + 115) ;local v704;while true do if (v703==(0 -0)) then v704=0 + 0 ;while true do if (((2008 -(456 + 781)) -(405 + (642 -277)))~=v704) then else v689=1 + 0 + (1693 -(732 + 961)) ;break;end if (v704==((0 -0) -(0 + 0))) then v653=v47(v588,1 + 0 + (1284 -(1278 + 5)) ,(5695 -3733) -((1023 -(12 + 68)) + (1731 -(595 + 120))) );v654=v47(v588,(260 + 264) -(281 + 239) ,(1154 -(317 + 830)) -1 );v704=4 -3 ;end end break;end end end if (v689==1) then v652=28 -(6 + 9 + 12) ;break;end end break;end end end if (v652==((240 + 1201) -((1228 -(200 + 275)) + 605 + 81))) then local v690=1432 -(532 + 900) ;local v691;local v692;local v693;while true do if (1==v690) then v693=nil;while true do if (v691==0) then v692=0 -(1652 -(7 + 1645)) ;v693=nil;v691=1;end if (v691==(1318 -(372 + 945))) then while true do if ((0 -0)~=v692) then else v693=(0 + 0) -(457 -(36 + 421)) ;while true do if (v693~=(0 + 0)) then else local v708=472 -(449 + 23) ;local v709;while true do if (v708==(130 -(100 + 30))) then v709=0 + 0 + 0 ;while true do if (v709==(0 + 0)) then if (v47(v654,1 -(0 -0) ,1412 -(989 + 422) )==(608 -(354 + 253))) then v655[(27 -21) -(992 -(250 + 738)) ]=v93[v655[1 + 1 ]];end if (v47(v654,722 -(708 + 12) ,1069 -(864 + 203) )~=(1 + (0 -0))) then else v655[3]=v93[v655[(27 -16) -(16 -8) ]];end v709=(1 -0) -(848 -(671 + 177)) ;end if (((2957 -2286) -(359 + 311))~=v709) then else v693=843 -(706 + 136) ;break;end end break;end end end if (v693==(1 + 0)) then v652=494 -(353 + 138) ;break;end end break;end end break;end end break;end if (v690==(0 -0)) then v691=0 -0 ;v692=nil;v690=2 -1 ;end end end if (v652~=((2048 -(238 + 169)) -(67 + 346 + 1227))) then else local v694=0;local v695;local v696;while true do if (v694==1) then while true do if (v695==((0 -0) -(1804 -(947 + 857)))) then v696=(0 + 0) -(0 -0) ;while true do if (v696~=(1325 -((2475 -(1621 + 207)) + (1672 -995)))) then else v652=1 + 1 ;break;end if (((0 -0) + (1660 -(574 + 1086)))==v696) then v655={v52(),v52(),nil,nil};if (v653==((1567 -(27 + 45)) -(848 + 271 + (2074 -(146 + 1552))))) then local v705=0 + (0 -0) ;local v706;local v707;while true do if (v705==((0 -0) + 0)) then local v711=0 -0 ;local v712;while true do if (v711==(0 -0)) then v712=0;while true do if (v712==1) then v705=1945 -(968 + 976) ;break;end if ((0 -0)==v712) then local v722=0 + 0 ;while true do if (v722==1) then v712=1;break;end if ((0 + 0)==v722) then v706=281 -(210 + 71) ;v707=nil;v722=1;end end end end break;end end end if (v705==((1182 -(610 + 569)) -(1354 -(55 + 1297)))) then while true do if (((1002 + 422) -(126 + 723 + 283 + 292))~=v706) then else v707=(668 -(441 + 227)) -(1714 -(424 + 1290)) ;while true do if (v707~=0) then else v655[(1 + 7) -(5 + 0) ]=v52();v655[10 -(2 + 4) ]=v52();break;end end break;end end break;end end elseif (v653==((44 + 6) -((1062 -(455 + 565)) + (13 -6)))) then v655[1542 -(51 + 0 + (2214 -(586 + 140))) ]=v53();elseif (v653==(1 + 1)) then v655[(409 -(353 + 55)) + 2 + 0 ]=v53() -((9 -(16 -9))^((1431 -(1155 + 252)) -(13 -5))) ;elseif (v653~=(8 -5)) then else local v714=(892 -(350 + 542)) -(0 + 0) ;local v715;local v716;local v717;while true do if (v714==(1582 -(8 + 243 + 1331))) then v715=0;v716=nil;v714=1;end if (v714~=((1789 -(500 + 1288)) + (0 -0))) then else v717=nil;while true do if ((1090 -(50 + 1040))~=v715) then else local v725=0 + 0 ;local v726;while true do if (v725==0) then v726=0;while true do if (v726~=(2 -(1 -0))) then else v715=509 -(359 + 149) ;break;end if (((0 + 0) -(0 + 0))==v726) then v716=(2657 -1549) -((1017 -468) + 208 + 351) ;v717=nil;v726=(1435 -(70 + 1364)) + 0 + 0 ;end end break;end end end if (v715~=(1 + 0 + (0 -0))) then else while true do if (((679 -(384 + 295)) + 0 + 0)~=v716) then else v717=(2150 -(133 + 731)) -((1751 -(292 + 589)) + (1499 -(674 + 409))) ;while true do if (v717~=((2344 -726) -((2026 -(819 + 965)) + (2211 -835)))) then else v655[(910 -659) -(62 + (568 -382)) ]=v53() -((2 + 0 + 0)^(10 + (16 -10))) ;v655[(164 -56) -((239 -148) + (1530 -(1142 + 375))) ]=v52();break;end end break;end end break;end end break;end end end v696=1 + 0 ;end end break;end end break;end if (v694==(0 -0)) then v695=(0 + 0) -0 ;v696=nil;v694=1 + 0 ;end end end if (v652==((3 -1) + 1)) then if (v47(v654,(6913 -5047) -((950 -(292 + 11)) + 76 + 1140) ,(268 + 671) -((1314 -(31 + 496)) + 85 + 64) )~=(1 + 0 + (1546 -(442 + 1104)))) then else v655[3 + 1 + 0 ]=v93[v655[2 + 2 + 0 ]];end v88[v584]=v655;break;end end break;end end break;end if (v650==1) then local v677=1791 -(991 + 800) ;local v678;local v679;while true do if (v677==(1 + 0)) then while true do if ((331 -(82 + 249))==v678) then v679=0 -(0 + 0) ;while true do if (v679==((3394 -(693 + 852)) -((2352 -1440) + 346 + 590))) then v650=96 -(81 + 13) ;break;end if (v679==0) then local v700=0 -0 ;while true do if (v700==(0 -0)) then v653=nil;v654=nil;v700=765 -(122 + 642) ;end if (v700==1) then v679=(860 -(853 + 6)) + 0 + 0 ;break;end end end end break;end end break;end if (v677==0) then v678=0;v679=nil;v677=1 + 0 ;end end end if (v650==(0 + (0 -0))) then local v680=857 -(423 + 434) ;local v681;while true do if ((0 + 0)==v680) then v681=0;while true do if (((227 + 202) -((1986 -(469 + 1427)) + (514 -176)))==v681) then v650=(1342 -(237 + 1101)) -3 ;break;end if (v681==(839 -(838 + 1))) then v651=1970 -(938 + 280 + (898 -(77 + 69))) ;v652=nil;v681=(1764 -488) -((3305 -2075) + 17 + 28) ;end end break;end end end end break;end if (v649==((0 -0) + 0)) then local v673=0;while true do if (v673==(1 -0)) then v649=1 + 0 ;break;end if (v673==(1483 -(1134 + 349))) then v650=0 + (0 -0) ;v651=nil;v673=1076 -(571 + 504) ;end end end end break;end if (v648==1) then v651=nil;v652=nil;v648=4 -2 ;end if (v648==(5 -3)) then v653=nil;v654=nil;v648=6 -3 ;end end end break;end end break;end if (v586~=((0 -0) -(0 -0))) then else local v622=0 + 0 ;while true do if (v622==(0 -0)) then local v644=0;while true do if (v644==(1852 -(1797 + 54))) then v622=1;break;end if (v644==(230 -(152 + 78))) then v587=(146 -(18 + 128)) + (1646 -(1619 + 27)) ;v588=nil;v644=1 -0 ;end end end if (v622==(1 + 0)) then v586=1 + (0 -0) ;break;end end end end break;end end end for v589=(1 + 0) -(652 -(148 + 504)) ,v53() do v89[v589-(197 -(158 + 38)) ]=v59();end v508=1;end if (v508==(3 -2)) then v400=1 + (0 -0) ;break;end end break;end end end end break;end end end if (v213==1) then v194=1818 -(1427 + 390) ;break;end end break;end end break;end if (v211==0) then v212=0 -0 ;v213=nil;v211=793 -(233 + 559) ;end end end end break;end end break;end if ((0 -0)==v192) then local v200=1050 -(487 + 563) ;local v201;while true do if (v200==(1979 -(1153 + 826))) then v201=0 + 0 ;while true do if (v201==(1846 -(1607 + 238))) then v192=(6316 -5048) -((1844 -(260 + 1185)) + (2020 -1152)) ;break;end if (v201==0) then local v214=0 + 0 ;while true do if (v214==(695 -(282 + 413))) then v193=(1380 -(865 + 515)) -0 ;v194=nil;v214=1 -0 ;end if (v214==1) then v201=1 -0 ;break;end end end end break;end end end end end v181=1 -0 ;end if (v181==(593 -(135 + 457))) then v159=1 + 0 + 0 ;break;end end end end break;end end end break;end if (v86==(4 -2)) then local v148=0 + 0 ;local v149;local v150;local v151;while true do if (v148==(1 + 0)) then v151=nil;while true do if (v149==(4 -3)) then while true do if (v150==((341 + 882) -(587 + 300 + 336))) then v151=0 + 0 + (0 -0) ;while true do if (v151~=0) then else local v195=0 -0 ;while true do if (v195==(1 -0)) then v151=1;break;end if (v195==(412 -(140 + 272))) then local v202=63 -(6 + 57) ;while true do if (v202==(0 -0)) then v91=nil;v92=nil;v202=1647 -(1556 + 90) ;end if (v202==1) then v195=1 + 0 ;break;end end end end end if (v151==(2 -1)) then v86=3;break;end end break;end end break;end if (v149==0) then v150=0 + 0 + (0 -0) ;v151=nil;v149=752 -(501 + 250) ;end end break;end if (v148==(0 + 0)) then v149=0 -0 ;v150=nil;v148=4 -3 ;end end end if ((0 + 0)~=v86) then else local v152=0 + 0 ;while true do if ((0 -0)==v152) then v87=1997 -(1881 + 116) ;v88=nil;v152=1 -0 ;end if (1==v152) then v86=302 -(120 + 181) ;break;end end end end break;end if (v85==(6 -(6 -2))) then v90=nil;v91=nil;v85=17 -(7 + 7) ;end if (v85~=(1 + 0)) then else local v126=0 + 0 ;local v127;while true do if (v126==(0 -0)) then v127=193 -(11 + 182) ;while true do if (0==v127) then v88=nil;v89=nil;v127=1 -0 ;end if (v127==(1 + 0)) then v85=(34 -27) -5 ;break;end end break;end end end end break;end end end local function v60(v61,v62,v63)local v94=0 + 0 ;local v95;local v96;local v97;while true do if (v94==(0 -0)) then local v116=1290 -(449 + 841) ;while true do if (v116==(625 -(351 + 274))) then local v128=0;while true do if (v128==(0 -0)) then v95=v61[1659 -(1106 + 552) ];v96=v61[3 -1 ];v128=3 -2 ;end if (v128==1) then v116=1 + 0 ;break;end end end if (v116==1) then v94=1;break;end end end if (v94==1) then local v117=0;while true do if (0==v117) then v97=v61[3];return function(...)local v132=0 -0 ;local v133;local v134;local v135;local v136;local v137;while true do if (v132==(1048 -(101 + 944))) then A,B=v58(v24(v137));if  not A[1491 -(574 + 916) ] then local v173=0;local v174;local v175;while true do if (v173==(1 + 0)) then while true do if (v174==(0 -0)) then v175=v61[1 + 3 ][v133] or "?" ;error(v7("\211\11\19\248\212\180\26\74\242\26\14\227\132\161\78\15\219","\128\104\97\145\164\192\58\47")   .. v175   .. v7("\101\35","\56\25\26\160")   .. A[2] );break;end end break;end if (v173==(0 -0)) then v174=0;v175=nil;v173=1;end end else return v26(A,2,B);end break;end if (v132==(1 + 0)) then v135={...};v136=v25("#",...) -(1 -0) ;v132=2 -0 ;end if (v132==(0 -0)) then v133=881 -(30 + 850) ;v134= -1;v132=1 + 0 ;end if (v132==2) then v137=nil;v137=function()local v160=0;local v161;local v162;local v163;local v164;local v165;local v166;local v167;local v168;local v169;local v170;while true do if (v160==(1 -0)) then v165={};v166={};v167={};for v178=0 -(1224 -(573 + (1752 -1101))) ,v136 do if ((v178>=v163) or (((6233 + 172 + 12455) -(3539 + 10560))<=(744 + 295))) then v165[v178-v163 ]=v135[v178 + ((89 + 12) -(1 + 6 + (363 -270))) ];else v167[v178]=v135[v178 + ((2 + 1) -((1299 -(791 + 504)) -(1691 -(930 + 759)))) ];end end v160=1469 -(1064 + 403) ;end if (v160==(0 -0)) then v161=v95;v162=v96;v163=v97;v164=v58;v160=1;end if (v160==(2 -0)) then v168=(v136-v163) + 1 + 0 ;v169=nil;v170=nil;while true do local v179=0 + 0 ;local v180;while true do if (v179==0) then v180=(1637 -(1231 + 406)) + (1468 -(1034 + 434)) ;while true do if ((v180==(0 + 0 + (0 -0) + 0 + 0)) or ((1883 -(1331 + 147))>(3240 -(779 + 838)))) then local v196=(429 -(139 + 290)) -0 ;while true do if ((((5227 -(621 + 672)) + (2063 -1100))<=(5804 -(253 + 565))) and (v196==(0 + 0 + (1333 -(1041 + 292))))) then local v203=0;local v204;while true do if (v203==(0 + 0)) then v204=189 -(151 + 38) ;while true do if (v204==(0 + 0)) then v169=v161[v133];v170=v169[(2017 -515) -((3493 -2459) + (863 -396)) ];v204=1;end if (v204==(1026 -(880 + 145))) then v196=2 -1 ;break;end end break;end end end if (((1 + (1778 -(1243 + 535)))==v196) or (1046>=((5330 -(211 + 705)) + 151 + 26))) then v180=(1 -0) + 0 + 0 ;break;end end end if ((v180==1) or ((4193 + 287)<((2032 -(247 + 1668)) + 43 + 69))) then if ((v170<=(3 + 21 + (15 -11))) or (3074<=(2856 -(596 + 5)))) then if ((((3959 -(619 + 869)) + (1823 -998))<(5711 -(833 + (1675 -(960 + 71))))) and (v170<=(4 + (703 -(264 + 430))))) then if ((v170<=((631 -(150 + 472)) -(559 -(461 + 95)))) or ((10067 -(9067 -1877))>=((6280 + 2865) -(12187 -6183)))) then if ((((2561 -(334 + 386)) + ((3475 -2140) -(1082 -704)))>=((331 -264) -(20 + 20))) and (v170<=((2148 -(288 + 803)) -((1286 -(853 + 164)) + (3113 -2327))))) then if ((v170<=((581 -(558 + 23)) + (1545 -(1200 + 22 + 323)))) or ((7750 -2800)<584)) then v167[v169[2]]=v167[v169[((148 + 847) -(894 -310)) -((1126 -823) + (596 -(270 + 221))) ]] + v167[v169[5 -1 ]] ;elseif ((v170>((3021 -(479 + 827)) -((1539 -(462 + 389)) + 1026))) or (((1121 + 1116) -((3566 -(378 + 403)) -((336 -122) + (2265 -949))))>=2865)) then v167[v169[1853 -(410 + 48 + 1393) ]]= #v167[v169[4 -(657 -(251 + 405)) ]];elseif ((((2116 -(799 + 880)) + 190)<=((371 + 2428 + (1471 -(145 + 534))) -((512 -227) + 1066))) and (v167[v169[2 + 0 + 0 ]]==v167[v169[(16 -7) -(1552 -(801 + 746)) ]])) then v133=v133 + 1 + 0 ;else v133=v169[3];end elseif ((((16226 -(17 + 1860)) -10870)<(1642 + 190 + (2530 -(226 + 164)))) and (v170<=((477 -(62 + 396)) -15))) then if (((665 + 269 + 81 + 117)<=((3524 -(38 + 78)) -(117 + 423 + 34))) and (v170>(1 + 0 + 2))) then v167[v169[3 -(1512 -(24 + 1487)) ]]=v169[((562 -(53 + 117)) -(115 + 205 + (714 -(451 + 194)))) + (0 -0) ] + v167[v169[4]] ;else v167[v169[7 -5 ]]={};end elseif ((v170==((5 + 6) -6)) or ((5228 -((2530 -(483 + 1239)) + 402 + 213))<(2049 -1116))) then local v230=0 + 0 ;local v231;local v232;local v233;local v234;local v235;while true do if (v230==(0 + 0)) then local v380=1020 -(344 + 676) ;while true do if (v380==(0 + 0)) then local v401=0 -0 ;while true do if (v401==(3 -2)) then v380=2 -1 ;break;end if (0==v401) then v231=((0 -0) + 0 + 0) -(0 -0) ;v232=nil;v401=1 -0 ;end end end if (v380==(3 -2)) then v230=124 -(72 + 51) ;break;end end end if (v230==2) then v235=nil;while true do if ((2128==(2001 + 127)) and (v231==((904 -(793 + 109)) -((5 -1) -3)))) then local v402=0;while true do if (v402==(651 -(316 + 335))) then v234=nil;v235=nil;v402=1 + 0 ;end if (v402==(3 -2)) then v231=2;break;end end end if ((v231==((0 -0) + 0 + 0)) or (((2968 + 848) -(30 + 151 + 1007))<(2591 -1184))) then v232=(765 + 899) -((1566 -(156 + 18)) + (1928 -(1545 + 111))) ;v233=nil;v231=1 -0 ;end if ((v231==((11 -4) -(1 + 4))) or (((567 -453) + (1705 -(1320 + 263)))>=(14 + 419 + 120 + 99))) then while true do if ((((1 + 1) -1)==v232) or (((3168 -1833) -(514 + 633))>=(4292 -(78 + 72 + (1481 -932))))) then v235=v169[(3 + 3) -3 ];for v479=1704 -(1204 + 499) ,v235 do v234[v479]=v167[v233 + v479 ];end break;end if (((1486 -((559 -(18 + 106)) + 35 + 776))<=(5054 -(3694 -(425 + 508)))) and ((((32 -20) + (201 -(24 + 151))) -(17 + 8 + 4 + 9))==v232)) then local v447=0 + (1946 -(161 + 1785)) ;while true do if ((v447==(1 + 0)) or (((4468 -(620 + 1094)) -((2041 -(710 + 1018)) + 1298))>=((7654 -5711) + (754 -469) + (1465 -(542 + 874))))) then v232=462 -(215 + ((9862 -7778) -((651 -(332 + 272)) + 1791))) ;break;end if (((13974 -9380)==(4792 -((351 -(312 + 32)) + 69 + (1611 -(1380 + 109))))) and (v447==(1792 -(151 + 1641)))) then local v509=0 + (685 -(177 + 508)) ;while true do if ((v509==(107 -(88 + 18))) or (((1850 + 5358) -(6791 -3302))<=((2024 -(1108 + 309)) + 1673))) then v447=1 + 0 + (1347 -(1060 + 287)) ;break;end if ((v509==((0 + 0) -(0 -0))) or ((6877 -(4673 -(232 + 172)))>=((16399 -12610) -((877 -(66 + 637)) + (75 -45))))) then local v542=0 + 0 ;while true do if (v542==(1549 -(1127 + 422))) then v233=v169[2 + 0 ];v234=v167[v233];v542=1 -0 ;end if (v542==(2 -1)) then v509=(5 -3) -(1 + 0) ;break;end end end end end end end end break;end end break;end if (v230==(3 -2)) then v233=nil;v234=nil;v230=297 -(260 + 35) ;end end else v62[v169[(187 + 277) -(32 + 66 + 363) ]]=v167[v169[1 + 0 + (923 -(218 + 704)) ]];end elseif ((((2537 -(198 + 484)) -(20 + (1572 -(1106 + 309))))>((4087 -(635 + 171)) -((488 -(124 + 162)) + (3498 -1714)))) and (v170<=(((23 + 3) -(4 + 9)) -(2 + 2)))) then if ((v170<=((60 -38) -(153 -(111 + 27)))) or (((1313 + 483) -(79 + 299))==1664)) then local v218=(75 + 184) -(249 + (29 -19)) ;local v219;local v220;while true do if ((((4898 -(772 + 503)) -((2525 -(1764 + 91)) + (3156 -2011)))>((2341 -(347 + 181)) -(233 + 548))) and (v218==(1 -(0 + 0)))) then while true do if (((0 + (190 -(149 + 41)))==v219) or (((3296 + 3639) -(8399 -4182))>=((29762 -20616) -(4898 + 780)))) then v220=v169[323 -(114 + 149 + 52 + 6) ];v167[v220](v167[v220 + ((887 -((961 -(540 + 191)) + (1856 -1201))) -(4 -3)) ]);break;end end break;end if ((((11973 -(703 + 937)) -(2335 + 5185))<=((5011 -1646) -(72 + 15))) and ((0 -0)==v218)) then local v366=0 + 0 ;local v367;local v368;while true do if (v366==(1 + 0)) then while true do if (v367==0) then v368=0 + 0 ;while true do if (v368==0) then v219=((901 -(373 + 528)) -(168 -(15 + 153))) + 0 ;v220=nil;v368=3 -2 ;end if (v368==1) then v218=1 -0 ;break;end end break;end end break;end if (v366==0) then v367=972 -(236 + 736) ;v368=nil;v366=1 + 0 ;end end end end elseif ((1376>((310 + 175) -(45 + (2058 -(1024 + 952)) + 231))) and (v170==(966 -(201 + 114 + (2331 -(560 + 1128)))))) then v167[v169[2 -0 ]]=v169[4 -(1 + 0) ];elseif ((((8596 -((2479 -(404 + 304)) + (1039 -(35 + 825)))) -(13428 -9830))>(7825 -4826)) and  not v167[v169[1 + 0 + 1 ]]) then v133=v133 + ((91 + 621) -((697 -489) + (1344 -841))) ;else v133=v169[((2353 + 2143) -2534) -(40 + 801 + ((2259 -(355 + 718)) -(54 + 14))) ];end elseif ((v170<=(26 -15)) or (((2226 + 1451) -1394)>=((4502 -(549 + 945)) + (2094 -1044)))) then if ((((5099 -3626) + 112 + 108)<(7759 -4288)) and (v170>(63 -(22 + 31)))) then local v240=1489 -(1019 + 470) ;local v241;local v242;local v243;local v244;local v245;local v246;while true do if (v240==(1 + 0)) then v243=nil;v244=nil;v240=2 + 0 ;end if (v240==2) then v245=nil;v246=nil;v240=3;end if ((0 -0)==v240) then local v381=0;while true do if (v381==(17 -(8 + 8))) then v240=1 + 0 ;break;end if ((285 -(274 + 11))==v381) then v241=0 + (0 -0) ;v242=nil;v381=1;end end end if (v240==(2 + 1)) then while true do if ((v241==((166 + 1820) -((2732 -1150) + 402))) or ((4825 -3047)>=(746 + 83 + 926 + 1244))) then v246=nil;while true do if ((v242==(1921 -(492 + 596 + 478 + 40 + 313))) or (((4081 + 1881) -(1247 + (1013 -(960 -(268 + 178)))))<=((3603 -844) -(22 + 480)))) then for v482=v243,v134 do local v483=0;local v484;while true do if (v483==(0 + 0)) then v484=0 -((0 -0) -0) ;while true do if (((((16549 -(381 + 360)) -(8561 + 1130)) -1665)>(292 + 127 + (2698 -813))) and (v484==((1445 -(1379 + 66)) -((0 -0) + 0)))) then v246=v246 + ((3 + 1) -(1046 -(840 + 203))) ;v167[v482]=v244[v246];break;end end break;end end end break;end if ((v242==(3 -(1 + 1))) or ((1670 + 139)==((6816 -2193) -(7076 -4034)))) then local v448=0 + 0 ;while true do if (v448==0) then v134=(v245 + v243) -(1 + 0 + (0 -0)) ;v246=(2502 -(771 + 576)) -((2760 -(410 + 1346)) + 35 + 116) ;v448=1729 -(192 + 1536) ;end if (v448==(953 -(324 + 628))) then v242=2;break;end end end if ((((8190 -(1212 + 777)) -(16702 -(58299 -45763)))>=(1613 + (1193 -(956 + 144)))) and (v242==(989 -((1411 -(14 + 816)) + 357 + 51)))) then local v449=97 -(18 + 79) ;local v450;local v451;while true do if (v449==0) then v450=1383 -(109 + 1274) ;v451=nil;v449=1;end if (v449==1) then while true do if (v450==0) then v451=0 + 0 ;while true do if ((1 + 0)==v451) then v242=(4 -1) -(1 + 1) ;break;end if (v451==(0 + 0)) then v243=v169[(1874 -(1602 + (775 -505))) -0 ];v244,v245=v164(v167[v243](v26(v167,v243 + ((6616 -5130) -(775 + 456 + 254)) ,v169[1287 -(193 + 1091) ])));v451=1 + 0 ;end end break;end end break;end end end end break;end if ((v241==0) or ((3167 + 965)<((1046 + 8338) -(3526 + 2207)))) then local v403=0 + 0 ;while true do if (v403==(0 + 0)) then v242=(471 -(348 + 123)) + 0 + 0 ;v243=nil;v403=1;end if ((1 -0)==v403) then v241=801 -(434 + 366) ;break;end end end if ((v241==(1 + (800 -(573 + 227)))) or (((30696 -(14533 + 6152)) -(10118 -3768))<(1284 + (9031 -6715)))) then local v404=474 -(473 + 1) ;while true do if (v404==(872 -(187 + 684))) then v241=5 -3 ;break;end if (v404==0) then v244=nil;v245=nil;v404=1848 -(979 + 868) ;end end end end break;end end else v167[v169[1 + (717 -(184 + 532)) ]]=v167[v169[1 + 0 + (302 -(196 + 104)) ]] + v169[(1287 + 616) -(862 + (1325 -(7 + 281))) ] ;end elseif ((((1683 + 673) -(938 + 415))>(164 -88)) and (v170==12)) then v167[v169[(1881 -(1263 + 617)) + (799 -(358 + 440)) ]]();else local v248=1289 -(803 + 486) ;local v249;local v250;local v251;while true do if (v248==(1 -0)) then v251=nil;while true do if (((1182 + 3137)==(196 + 139 + ((11046 -(460 + 307)) -(7362 -(588 + 479))))) and (v249==((1250 -(108 + 101)) -(128 + (1287 -375))))) then for v438=v250 + (1637 -(471 + 1165)) + 0 + 0 ,v169[3] do v20(v251,v167[v438]);end break;end if ((((5485 -(48 + 139)) -((1751 -1155) + 130 + 196))>=((2632 -971) + (3688 -(280 + 748)))) and (v249==((0 -0) + 0 + 0))) then local v405=0 -0 ;local v406;while true do if (v405==(0 + 0)) then v406=0 -0 ;while true do if (((1254 -(933 + 320))==v406) or (((4295 -(17 + 293)) -(15 + (1930 -(282 + 628))))<=((10886 -8084) -1477))) then v249=(8 -6) -(1 + 0) ;break;end if ((((2803 -1682) -648)==((2912 -1497) -(1851 -909))) and (v406==((391 -(177 + 214)) + (1092 -(548 + 544))))) then local v510=0 + 0 ;while true do if (v510==(715 -(190 + 524))) then v406=(1 + 0) -(0 + 0) ;break;end if (v510==0) then local v543=0 + 0 ;while true do if (v543==(1 -0)) then v510=1 -0 ;break;end if (v543==(0 + 0)) then v250=v169[(2 + 5) -(21 -16) ];v251=v167[v250];v543=1;end end end end end end break;end end end end break;end if (v248==(0 -0)) then v249=0 -0 ;v250=nil;v248=1 -0 ;end end end elseif (((2496 -(731 + 242))<=(412 + (4875 -(1306 + 627)) + 112)) and (v170<=(((709 -(321 + 135)) -((19 -11) + 217)) -8))) then if ((((6762 -(1464 + 117)) -((1741 -771) + 23))<(561 + 1102 + 2977)) and (v170<=(47 -(106 -75)))) then if ((v170<=(29 -(11 + 4))) or ((7032 -4619)==(2634 -(22 + (2329 -(15 + 692)))))) then v167[v169[1 + 0 + 1 ]]=v167[v169[(729 -(331 + 55)) -((247 -127) + 220) ]] * v167[v169[1 + 3 ]] ;elseif (((3511 -((2013 -(112 + 423)) + 107 + 268))>(789 -260)) and (v170==(1236 -(1066 + 49 + (209 -103))))) then local v252=101 -(70 + 31) ;local v253;local v254;local v255;local v256;while true do if (v252==2) then while true do if (((1012 + 844 + 620)<=(9912 -(5024 + 543))) and (v253==(1496 -(1379 + 116)))) then v256=v167[v254 + 2 + 0 + 0 + 0 ];if (((7358 -4482)==(9315 -6439)) and (v256>(0 -(406 -(290 + 116))))) then if ((v255>v167[v254 + ((2326 -(527 + 137)) -(974 + 563 + 124)) ]) or (((195 -112) + (175 -131) + (423 -275))>((5021 -(823 + 64)) + (638 -(107 + 116))))) then v133=v169[8 -5 ];else v167[v254 + ((6800 -5390) -(331 + 744 + (812 -480))) ]=v255;end elseif ((((5205 + 1443) -((4190 -(8093 -5369)) + (622 -399)))>(39 + 249 + 641 + 1307)) and (v255<v167[v254 + ((277 + 1695) -((1909 -(863 + 140)) + (3880 -2815))) ])) then v133=v169[2 + 1 ];else v167[v254 + (10 -(2 + 5)) ]=v255;end break;end if (((3687 -(8565 -5725))<=((1225 -(144 + 452)) + 1901 + 719)) and (v253==((1155 -((2657 -(505 + 1359)) + (1312 -950))) -(0 + 0)))) then local v408=0 -0 ;local v409;while true do if (v408==(0 + 0)) then v409=1818 -((803 -(272 + 87)) + (2651 -1277)) ;while true do if ((v409==((19 + 28 + (532 -(55 + 229))) -((1357 -(1012 + 295)) + (710 -((668 -(505 + 52)) + 354))))) or (((12979 -7664) -(17 + 10 + 1356))==((4078 -(521 + 72)) -(170 + 499)))) then local v511=0;while true do if (v511==(0 -0)) then v254=v169[(3 -2) + 1 ];v255=v167[v254];v511=947 -(758 + 188) ;end if (v511==(1886 -(1081 + 804))) then v409=(3616 -2228) -((125 -48) + 259 + 1051) ;break;end end end if ((((918 -(337 + 542)) + 3912)==3951) and (v409==((1989 -(336 + 1652)) + (1574 -(1083 + 28 + 463))))) then v253=(587 + 19) -(((50 + 539) -(2238 -(23 + 1886))) + 345) ;break;end end break;end end end end break;end if (v252==(0 -0)) then v253=(0 -0) + (431 -(112 + 319)) ;v254=nil;v252=1 -0 ;end if (v252==1) then v255=nil;v256=nil;v252=2;end end else local v257=0 + 0 ;local v258;local v259;local v260;while true do if (v257==0) then v258=0;v259=nil;v257=2 -1 ;end if (v257==1) then v260=nil;while true do if (v258==(3 -2)) then while true do if ((((10410 -8285) -((85 -65) + (837 -(23 + 478))))<(946 + 1501)) and (v259==((0 -0) -(499 -(142 + 357))))) then v260=v169[(1332 -(1147 + 184)) + 1 + 0 ];v167[v260]=v167[v260](v26(v167,v260 + ((2664 -1436) -(192 + 765 + 120 + 150)) ,v134));break;end end break;end if (v258==(609 -(135 + 474))) then local v410=929 -(626 + 303) ;while true do if (v410==0) then v259=1911 -(13 + (67 -43) + 522 + 1352) ;v260=nil;v410=972 -(331 + 640) ;end if (v410==(1 + 0)) then v258=2 -1 ;break;end end end end break;end end end elseif ((((499 -(373 + 26)) + 8 + 42 + 78)<=((5870 -1731) -(289 + 387 + 1039))) and (v170<=((26 -15) + (1925 -(928 + 990))))) then if (((7646 -6111)>=(392 -(14 + 220 + 21))) and (v170>((1726 -(1706 + 12)) + (730 -(67 + 654))))) then v167[v169[8 -(1694 -(13 + 1675)) ]]=v167[v169[3]][v167[v169[1860 -(443 + (5290 -(842 + 3035))) ]]];else local v263=894 -(172 + 722) ;local v264;local v265;local v266;while true do if (v263==(1 + 0)) then v266=nil;while true do if (((1964 -((3377 -1524) + (1446 -(234 + 1101))))==v264) or ((2353 + (2400 -1584))<=((16478 -12060) -((2043 -(1399 + 592)) + 1596)))) then local v411=0 -0 ;while true do if (v411==(0 + 0)) then v265=0 -0 ;v266=nil;v411=1;end if (v411==(1 + 0)) then v264=1047 -(757 + 289) ;break;end end end if ((((4683 -(652 + 1025)) -(74 + 1 + 217 + 574))>(2317 -(220 + 407))) and (v264==(((5630 -(1133 + 381)) -2598) -((989 -(158 + 427)) + 1113)))) then while true do if (((7528 -((4665 + 3425) -(11320 -8419)))>(1584 -(1424 + (188 -106)))) and (((0 + 0) -(0 + 0))==v265)) then v266=v169[808 -(749 + (270 -(148 + 65))) ];v167[v266](v26(v167,v266 + (229 -((74 -13) + 158 + 9)) ,v169[3]));break;end end break;end end break;end if (v263==(0 -0)) then v264=1266 -(884 + 382) ;v265=nil;v263=1856 -(707 + 1148) ;end end end elseif ((v170>(6 + 13)) or ((1550 + 25)<(141 + 337))) then local v267=0 + 0 ;local v268;local v269;while true do if ((v267==(0 -0)) or (((9546 -(704 + 248 + (701 -256))) -(4280 + 931))==((9941 -4384) -(38 + 2018)))) then local v382=0 -0 ;while true do if (v382==(0 -0)) then v268=(1255 + 513) -(((1120 -(63 + 43)) -(101 + 69)) + (3658 -2734)) ;v269=nil;v382=1 -0 ;end if (v382==(1186 -(121 + 1064))) then v267=1;break;end end end if (((((26761 -10774) -(31732 -19914)) + (2337 -1564))>(3703 -2439)) and (v267==(308 -(235 + 72)))) then while true do if ((((1836 -(1629 + 112)) + (2307 -1333))<=4706) and (v268==((657 + 106) -(308 + 455)))) then v269=v169[291 -(172 + (1595 -(232 + 1246))) ];do return v167[v269](v26(v167,v269 + ((3194 -(808 + 462)) -((1587 -(1488 + 63)) + 1887)) ,v169[(2 -1) + (4 -2) ]));end break;end end break;end end elseif ((((5333 -(21 + 249)) -((4805 -1150) -(1090 + 75)))<((2405 -(791 + 1052)) + 1957 + 1604)) and v167[v169[2 + 0 ]]) then v133=v133 + 1 + (1201 -(1198 + 3)) ;else v133=v169[685 -(61 + 621) ];end elseif ((((15313 -9790) -(2368 -(5 + 640 + 132)))>(229 + (4617 -3009))) and (v170<=24)) then if ((((12796 -(1454 + 63)) -(8065 + 434))>=((750 -499) + ((1612 -(759 + 219)) -(205 + 71)))) and (v170<=(64 -42))) then if ((v170>(101 -(272 -192))) or ((10660 -(17465 -11629))<((1819 + 388) -(750 + 614)))) then if ((((5241 -(38 + 190)) -((1888 -(736 + 899)) + 263 + 481))>=(8418 -5361)) and (v167[v169[(6 -4) + (0 -0) ]]==v169[1345 -(576 + 765) ])) then v133=v133 + (((7932 -(896 + 874)) -(6344 -1910)) -(73 + 874 + (1902 -(525 + 597)))) ;else v133=v169[3];end else local v270=0;local v271;local v272;while true do if (v270==(0 -0)) then local v383=633 -(117 + 516) ;while true do if (v383==0) then v271=1982 -((3260 -(447 + 1045)) + (310 -96)) ;v272=nil;v383=1;end if (v383==(1725 -(1310 + 414))) then v270=1;break;end end end if (v270==(1866 -(897 + 968))) then while true do if (((4 + 32 + (2102 -(100 + 1099)))>((632 + 499) -((6602 -4404) -(107 + 85 + (2615 -910))))) and (((1876 -(597 + 140 + 337 + 152)) -(((29 + 77) -40) + 584))==v271)) then v272=v169[2 + 0 ];v167[v272]=v167[v272](v26(v167,v272 + (1 -0) ,v169[3 + 0 + 0 ]));break;end end break;end end end elseif ((v170>(20 + (7 -4))) or (3643>(7891 -3063))) then v167[v169[(2 + 0) -((1632 -(1249 + 383)) + 0 + 0) ]]=v167[v169[2 + 1 ]][v169[(25 -16) -((3055 -(1073 + 270)) -(429 + 1278)) ]];elseif ((v169[7 -5 ]==v167[v169[3 + 0 + 1 + 0 ]]) or (3556<=((3641 -(608 + 606)) + 232 + 221))) then v133=v133 + ((1076 -(592 + 239)) -((35 -12) + ((2774 -(316 + 1175)) -((1136 -282) + 94 + 114)))) ;else v133=v169[(654 -(150 + 501)) + 0 + 0 + 0 ];end elseif ((v170<=(4 + 16 + 6)) or ((1744 -((562 -(126 + 44)) + 83 + 72))<(229 + 235 + 70 + 596))) then if (((1388 -677)<((505 -231) + (5034 -3614))) and (v170>((2520 -(572 + 8)) -((3666 -2277) + 472 + 54)))) then v167[v169[5 -(804 -(650 + 151)) ]][v169[(739 -326) -((608 -456) + (594 -336)) ]]=v169[1935 -((2474 -(771 + 30)) + 258) ];else v167[v169[(1067 -(823 + 239)) -3 ]]=v167[v169[(1252 -(652 + 597)) -(1947 -(908 + 1039)) ]] -v169[1 + (0 -0) + ((15 -11) -(2 -1)) ] ;end elseif ((v170==(87 -60)) or (((20481 -11124) -(6116 -(465 + 81)))<(1614 -(538 + 655)))) then v133=v169[465 -(288 + 174) ];else v167[v169[((2 + 0) -(1 + 0)) + 1 + 0 ]]=v60(v162[v169[(4 + 1) -2 ]],nil,v63);end elseif ((v170<=(24 + (29 -10))) or ((2074 -502)>(5806 -(419 + 997)))) then if (((2770 -((1592 -(1040 + 318)) + ((2186 -(155 + 504)) -(1749 -(192 + 350)))))==(1587 + 571 + 58)) and (v170<=(377 -((750 -(306 + 142)) + (114 -74))))) then if ((((7308 -(642 + 170)) -(19113 -14941))==(1660 + (2787 -2123))) and (v170<=(8 + 6 + (1007 -(716 + 274))))) then if (((4107 -1605)==(3529 -1027)) and (v170<=((1215 -(966 + 246)) + 26))) then v167[v169[(1569 -(291 + 1277)) + 1 ]]=v167[v169[4 -1 ]]%v169[1915 -(995 + 916) ] ;elseif ((v170==(7 + 16 + 7)) or (((7034 -5036) -(427 + (998 -663)))<((712 + 490) -(1922 -(1382 + 18))))) then v167[v169[(1539 -(358 + 1176)) -((399 + 1172) -(432 + (1532 -396))) ]]=v167[v169[3]]/v167[v169[(6 + 8) -(37 -27) ]] ;else v63[v169[((4475 -1484) -((2848 -1287) + (2267 -(532 + 1331)))) -((1813 -1070) + 280) ]]=v167[v169[(347 -154) -((1753 -(412 + 1214)) + 31 + 33) ]];end elseif ((v170<=((149 + 1602) -(65 + 71 + 1582))) or ((5654 -(752 + 509))<=(2307 -(1667 -(616 + 390))))) then if ((((16367 -4986) -(7465 -(519 + 58)))>(3 + 115 + 134 + 739)) and (v170>(7 + 25))) then v167[v169[(1080 -(1056 + 23)) + 1 + 0 ]]=v62[v169[3]];else local v285=0 -0 ;local v286;local v287;local v288;while true do if (v285==(922 -(60 + 862))) then local v384=0 + 0 ;while true do if (v384==1) then v285=2 -1 ;break;end if (v384==(0 + 0)) then v286=(339 -254) -(4 + 1 + 27 + 53) ;v287=nil;v384=1015 -(1002 + 12) ;end end end if (v285==1) then v288=nil;while true do if (((1 + 0)==v286) or (((6549 -(5 + 76)) -(12283 -9142))<((14530 -10223) -2052))) then for v439=(644 + 1044) -(606 + 228 + 119 + 734) , #v166 do local v440=0 + 0 ;local v441;while true do if ((v440==(0 -(1792 -(211 + 1581)))) or ((277 + 1070)>(5238 -(258 + 190)))) then v441=v166[v439];for v495=((1094 -(147 + 804)) -((394 -(88 + 228)) + 65)) -(0 + 0) , #v441 do local v496=0;local v497;local v498;local v499;local v500;local v501;local v502;while true do if (v496==(0 -0)) then v497=(0 -0) -0 ;v498=nil;v496=1488 -(790 + 697) ;end if (v496==(440 -(158 + 281))) then local v539=0 -0 ;local v540;while true do if (v539==(0 + 0)) then v540=0 -0 ;while true do if (v540==1) then v496=1 + 1 ;break;end if (v540==(0 + 0)) then v499=nil;v500=nil;v540=103 -(90 + 12) ;end end break;end end end if (v496==2) then v501=nil;v502=nil;v496=3;end if (v496==(3 + 0)) then while true do if ((v497==((0 -0) -(0 -0))) or (((819 + 1663) -(3939 -2142))>=((1369 + 78) -((223 -122) + (1033 -(793 + 92)))))) then v498=((5709 -(64 + 907)) -3016) -(260 + 961 + (1563 -(356 + 706))) ;v499=nil;v497=1;end if ((((3163 + 1412) -((784 -(639 + 17)) + 163 + 39))<=(3140 + 1049 + 339)) and (((1651 -(720 + 929)) -(1 + 0))==v497)) then local v572=0 -0 ;while true do if (v572==(236 -(138 + 98))) then local v593=0 + 0 ;local v594;while true do if (v593==(0 -0)) then v594=0 -0 ;while true do if (v594==0) then v500=nil;v501=nil;v594=1 + 0 ;end if (v594==(1410 -(64 + 1345))) then v572=3 -2 ;break;end end break;end end end if (v572==1) then v497=(3 + 3) -4 ;break;end end end if ((((3522 -(407 + 1351)) + ((552 + 2119) -(123 + 159 + 846)))>((1660 -(843 + 613)) + 813 + 110)) and (v497==(1 + 0 + (2 -1)))) then v502=nil;while true do if ((v498==((127 -(46 + 76)) -(1093 -(274 + 816)))) or (((1076 -(56 + 701)) + (2325 -(1536 + 15)))>=(1570 + (1143 -610)))) then while true do if (((10154 -5968)>=((2405 -1309) -(1270 -842))) and (((1743 -(22 + 735)) -(219 + 34 + (2201 -((1009 -339) + 345 + 454))))==v499)) then v502=v500[(982 + 602) -(225 + 856 + 415 + 86) ];if (((v501==v167) and (v502>=v287)) or ((1587 -((1345 -(804 + 170)) + 86 + 623))>((234 -169) + (12956 -8269)))) then local v623=0 -0 ;local v624;local v625;while true do if ((1335 -(378 + 957))==v623) then v624=414 -((289 -175) + 300) ;v625=nil;v623=1 + 0 ;end if (v623==(824 -(46 + 777))) then while true do if (((296 + 169 + (1565 -642))<=((4978 -(365 + 357)) -(178 + 11 + 1336))) and (v624==((4182 -2211) -(1459 + 194 + 318)))) then v625=(85 -55) -(6 + 9 + 13 + (5 -3)) ;while true do if ((v625==((637 -(40 + 597)) -(0 -0))) or (((3757 + 1336) -(3548 -(89 + 378)))>(11148 -7193))) then v288[v502]=v501[v502];v500[1 -(286 -(226 + 60)) ]=v288;break;end end break;end end break;end end end break;end if ((((4874 -(134 + 186)) -((1723 -(1019 + 178)) + 488 + 375))==3165) and (v499==(((2571 -(669 + 1161)) -(160 + 215)) -((104 -69) + 38 + 293)))) then local v610=0 -0 ;local v611;while true do if (v610==0) then v611=793 -(80 + 713) ;while true do if ((((12452 -7843) -(1425 + 59 + (817 -501)))==(4779 -((344 -(39 + 52)) + 1717))) and (v611==(0 + 0 + 0))) then local v647=(3246 -(1925 + 48)) -(319 + 644 + 310) ;while true do if ((v647==(2 -1)) or (((37071 -24753) -9414)==(979 + 257))) then v611=(525 -(272 + 252)) + (0 -0) ;break;end if ((v647==((4389 -3201) -((2528 -(353 + 1161)) + (340 -166)))) or (((2053 -(519 + 286)) + ((3343 -(596 + 503)) -(754 + (1176 -(837 + 242)))))>((2526 + 1187) -(38 + (1630 -889))))) then local v664=0;local v665;while true do if ((0 -0)==v664) then v665=196 -(42 + 154) ;while true do if (0==v665) then v500=v441[v495];v501=v500[4 -(1004 -(629 + 372)) ];v665=1 + 0 ;end if (v665==1) then v647=1 + 0 + 0 + 0 ;break;end end break;end end end end end if (((((1691 -(577 + 873)) + 587 + 627) -(2047 -1157))<((566 + 4432) -((1091 -661) + 558 + 45))) and (v611==((1332 -(615 + 716)) + (346 -(109 + 237))))) then v499=1 + 0 + 0 ;break;end end break;end end end end break;end if ((v498==((2 + 0 + 0) -(1255 -(64 + 1190)))) or (((11608 -5723) -3756)<(((3352 -2536) + 1737) -((1562 -(742 + 203)) + (534 -359))))) then local v595=(0 + 0) -(0 + 0) ;while true do if ((v595==(1 + (1303 -(1045 + 258)))) or ((2618 -((641 -354) + (955 -(234 + 243))))<=((1592 -636) + (2184 -1698)))) then v498=(1 -0) + (448 -(254 + 193)) ;break;end if (((210 + 694 + 511)==(979 + 99 + 337)) and (v595==(0 + 0 + 0 + 0))) then v501=nil;v502=nil;v595=(740 + 417) -(304 + 693 + 159) ;end end end if ((v498==(598 -(312 + 286))) or (((31577 -17837) -(12651 -(779 + 1129)))<(118 + 233 + 159))) then local v596=0 -0 ;while true do if (v596==(1 + 0)) then v498=(1249 -(29 + 1068)) -((656 -(317 + 281)) + 93) ;break;end if (v596==0) then local v612=0 + 0 ;while true do if (v612==0) then v499=878 -((2740 -1975) + 113) ;v500=nil;v612=1;end if (v612==(1480 -(739 + 740))) then v596=1429 -(972 + 456) ;break;end end end end end end break;end end break;end end end break;end end end break;end if ((v286==((0 + 0) -0)) or (((146 + 3251) -2317)>=((3307 + 1572) -(7006 -3671)))) then local v415=1438 -(1089 + 349) ;local v416;while true do if (v415==(0 + 0)) then v416=(331 + 94) -((473 -289) + 96 + 145) ;while true do if ((v416==(((0 -0) -(0 + 0)) -(0 -0))) or (((1673 -999) + (571 -352))>=(70 + 192 + 1600))) then local v512=0 -0 ;while true do if (v512==(3 -2)) then v416=482 -(163 + 318) ;break;end if (v512==0) then v287=v169[875 -((1497 -(50 + 593)) + 19) ];v288={};v512=1 + 0 ;end end end if ((512<((4424 -(350 + 1004)) -(2810 -1715))) and (v416==(2 -(104 -(89 + 14))))) then v286=(1694 -(62 + 296)) -(512 + 712 + 111) ;break;end end break;end end end end break;end end end elseif ((v170==((90 + 45) -101)) or ((386 + 1151 + 471 + 1708)<(((6278 -(1005 + 984)) -(9603 -6857)) + (2710 -1380)))) then local v289=0 + 0 ;local v290;local v291;local v292;local v293;while true do if (v289==(1 + 1)) then while true do if ((((7473 -(118 + 505)) -(6468 -(406 + 1548)))>=(557 + 475)) and ((1 -0)==v290)) then v293=nil;while true do if (((2326 + 653 + 258 + 1756)>=(1001 + 1202)) and ((1 + 0 + 0 + (0 -0))==v291)) then for v490=v292 + (2 -(1 + 0)) ,v169[(22 -16) -(1 + (1 -0)) ] do v293=v293   .. v167[v490] ;end v167[v169[(1481 -(889 + 590)) + 0 ]]=v293;break;end if (((580 + (79 -(9 + 14)))==636) and (v291==(((483 -(73 + 410)) -(0 -0)) + 0))) then local v456=0;local v457;while true do if (v456==(1082 -(724 + 358))) then v457=1772 -(1100 + 672) ;while true do if ((v457==((1 + 0) -(0 + 0))) or ((58 + 2935)>=(3969 + 319))) then v291=1867 -((1081 -487) + 1272) ;break;end if (((1685 + ((10510 -8376) -((1352 -(108 + 200)) + 240)))<((6263 -2924) + (408 -256))) and (v457==(0 + 0))) then local v547=0 + 0 ;while true do if (v547==(0 + 0)) then local v578=0;while true do if (v578==1) then v547=4 -3 ;break;end if ((860 -(671 + 189))==v578) then v292=v169[2 + 0 + 1 + 0 ];v293=v167[v292];v578=1 + 0 ;end end end if ((3 -2)==v547) then v457=(1 + 1) -((184 + 1114) -(578 + 719)) ;break;end end end end break;end end end end break;end if ((v290==((0 -0) + ((835 -(634 + 201)) -(0 -0)))) or (((283 + 2781) -(112 + 719 + (1171 -669)))>=((1537 + 927) -((882 -(381 + 147)) + (1583 -(215 + 1091)))))) then local v417=0;while true do if (v417==(905 -(103 + 801))) then v290=1 + 0 + 0 ;break;end if (v417==(0 -0)) then v291=0 -0 ;v292=nil;v417=1048 -(938 + 109) ;end end end end break;end if (v289==1) then local v385=0;while true do if (v385==(1572 -(1568 + 3))) then v289=467 -(418 + 47) ;break;end if (v385==(0 + 0)) then v292=nil;v293=nil;v385=1868 -(388 + 1479) ;end end end if ((0 + 0)==v289) then v290=0 -0 ;v291=nil;v289=2 -1 ;end end else local v294=0 -(0 + 0) ;local v295;local v296;local v297;local v298;while true do if ((v294==(2 -0)) or ((2562 + (3844 -2100))<=((10260 -(17 + 676)) -(26517 -20554)))) then while true do if ((((10 + 1271) -((3160 -2096) + 217))==v295) or ((6595 -(5149 -(530 + 263)))>=(5785 -1803))) then local v418=0;while true do if (v418==(1 + 0)) then v295=1 + 0 + 0 + 0 ;break;end if (v418==(1196 -(221 + 975))) then v296=v169[((9 -5) + 1 + 1) -4 ];v297={v167[v296](v167[v296 + (((6054 -3551) -(253 + 90 + 204 + 555)) -(269 + 74 + (1293 -(32 + 204)))) ])};v418=1;end end end if (((1827 + 2457)>(1204 -(784 -377))) and (v295==(1 + 0))) then v298=(0 -0) + (0 -0) ;for v442=v296,v169[1784 -(267 + 1513) ] do local v443=0;local v444;while true do if (v443==0) then v444=(0 + 0) -(0 + 0) ;while true do if ((v444==(0 -0)) or ((5528 -((3032 -(1549 + 434)) + (560 -(44 + 282))))<(9970 -7848))) then v298=v298 + (3 -(7 -5)) ;v167[v442]=v297[v298];break;end end break;end end end break;end end break;end if ((((4481 -2447) + 112)<(1481 + 724)) and (v294==((2 -1) -(1870 -(351 + 1519))))) then v297=nil;v298=nil;v294=((278 -161) -(24 + (234 -143))) + 0 ;end if (((522 + 1389 + 2561)>=(159 + (1872 -(250 + 890)))) and (((393 -(127 + 266)) -(0 + 0))==v294)) then local v386=0;while true do if (v386==0) then local v419=0;while true do if (v419==(786 -(161 + 624))) then v386=1641 -(794 + 846) ;break;end if (v419==(0 + 0)) then v295=252 -(204 + 48) ;v296=nil;v419=92 -(51 + 40) ;end end end if (v386==(1 -0)) then v294=(20 + 25 + 96) -(41 + 20 + 79) ;break;end end end end end elseif ((((3999 -(339 + 601)) -(5710 -4089))<((14438 -6412) -(7429 -(40 + 1869)))) and (v170<=(14 + 15 + (384 -(11 + 363))))) then if ((v170<=(7 + ((167 -75) -(55 + 7)))) or ((3369 + 860 + (984 -390))<((25951 -19332) -(9981 -7204)))) then if (((3842 -((3278 -(1086 + 222)) + 22))<(927 + 995 + (3407 -2230))) and (v170>((923 + 2) -((2399 -1879) + (1256 -887))))) then v167[v169[2]]=v169[(1729 -(25 + 44)) -((3126 -2001) + (2006 -(1020 + 454))) ]/v167[v169[1768 -(1416 + 348) ]] ;elseif ((v167[v169[1 + 1 ]]<=v167[v169[(565 + 665) -(428 + 798) ]]) or (((1714 -(45 + 65)) -(4043 -2914))>=3661)) then v133=v133 + (1403 -(183 + 1219)) ;else v133=v169[(2581 -(784 + 235)) -((1424 -(213 + 115)) + 316 + 147) ];end elseif ((((13507 -8961) -(394 + 147 + (1800 -1243)))>=(1184 + 40 + 327)) and (v170==(15 + (1851 -(1155 + 693)) + 18 + 2))) then local v300=0 -0 ;local v301;local v302;local v303;local v304;local v305;local v306;while true do if (v300==(0 + 0)) then local v387=0;while true do if (v387==(0 + 0)) then v301=(2847 -(292 + 1369)) -((114 -85) + 1157) ;v302=nil;v387=1;end if (1==v387) then v300=1;break;end end end if (v300==(7 -4)) then while true do if (((1532 -(42 + 1))>((187 + 879) -(((1247 -874) -((499 -370) + (1188 -(350 + 776)))) + (328 -177)))) and (v301==(2 -0))) then v306=nil;while true do if ((((435 + 3208) -(1124 + 4 + 556))>=((241 + 1683) -(511 + 146 + (911 -611)))) and ((1 + 0 + 1)==v302)) then for v491=v303,v134 do local v492=0;local v493;local v494;while true do if (v492==0) then v493=0 -0 ;v494=nil;v492=827 -(739 + 87) ;end if (v492==1) then while true do if (v493==(0 + 0)) then v494=(0 -0) + ((218 -(6 + 212)) -0) ;while true do if ((v494==(0 + (0 -0))) or ((5699 -(925 + 1786))==3068)) then v306=v306 + (976 -((1785 -1135) + 202 + 123)) ;v167[v491]=v304[v306];break;end end break;end end break;end end end break;end if (((422 + 807)>=((553 + 1544) -((1697 + 1322) -(5178 -3763)))) and (v302==((1650 -(296 + 711)) -((758 -401) + (1533 -(800 + 448)))))) then v134=(v305 + v303) -((2851 -(776 + 445)) -(890 + (3329 -2590))) ;v306=(0 -0) -(0 + 0) ;v302=1 + 1 ;end if ((v302==((0 + 0) -(0 + 0))) or (((4748 + 1074) -1210)<((1805 -(381 + 1205)) + 887))) then local v459=0 -0 ;local v460;while true do if (v459==(342 -(313 + 29))) then v460=0 -0 ;while true do if ((v460==((737 -(272 + 465)) + 0 + 0)) or (((2701 -1147) + (3592 -(135 + 249)))==(4350 -1425))) then local v548=0;while true do if (v548==(0 + 0)) then v303=v169[(1396 -(453 + 748)) -((1511 -(455 + 948)) + 12 + 58 + (33 -18)) ];v304,v305=v164(v167[v303](v167[v303 + 1 + (0 -0) ]));v548=1 + 0 ;end if (v548==1) then v460=1 + 0 + 0 + 0 + 0 ;break;end end end if (((7487 -5226)<(((14200 + 5852) -(582 + 624)) -(46486 -(123377 -90809)))) and (v460==((2249 -(289 + 1521)) -((1059 -775) + 5 + 80 + 42 + 27)))) then v302=1 + 0 ;break;end end break;end end end end break;end if ((((860 -(479 + 378)) -2)==v301) or ((43 + 1858)<488)) then local v420=192 -(167 + 25) ;while true do if (v420==(1 + 0)) then v301=2 + 0 ;break;end if (v420==(0 -0)) then v304=nil;v305=nil;v420=1;end end end if ((v301==((3424 -(1449 + 129)) -(52 + 12 + 391 + 1391))) or (((3718 -1740) + (2202 -(1066 + 878)))>3373)) then local v421=1998 -(456 + 1542) ;while true do if (v421==(0 + 0)) then v302=0 + 0 ;v303=nil;v421=1579 -(1162 + 416) ;end if (1==v421) then v301=1 + 0 + 0 ;break;end end end end break;end if (v300==(72 -(31 + 40))) then local v388=0 + 0 ;while true do if (v388==(1 + 0)) then v300=2 + 0 ;break;end if (v388==(0 + 0)) then v303=nil;v304=nil;v388=212 -(8 + 203) ;end end end if (v300==(1544 -(1015 + 527))) then local v389=1199 -(1151 + 48) ;while true do if (v389==0) then v305=nil;v306=nil;v389=1083 -(315 + 767) ;end if (v389==(1 + 0)) then v300=5 -2 ;break;end end end end else v167[v169[(4989 -3096) -(((139 + 794) -(452 + (600 -202))) + 1808) ]][v167[v169[3 + 0 + (0 -0) ]]]=v167[v169[(836 -(418 + 417)) + 3 ]];end elseif ((v170<=(4 + 9 + 28)) or (((680 + 5041) -(256 + 654 + 78))==(5773 -((2142 -744) + (206 -(153 + 35)))))) then if (((998 + (1569 -791))==(((263 + 559) -426) + 1380)) and (v170>((2106 -(749 + 176)) -((599 -282) + 824)))) then do return;end else for v369=v169[2 + 0 + 0 ],v169[4 -1 ] do v167[v369]=nil;end end elseif (((5730 -((2400 -(1387 + 235)) + (3733 -2812)))<((15304 -10073) -((1821 -1266) + (344 -(132 + 93))))) and (v170>(40 + 2))) then v167[v169[(1946 -(125 + 206 + 1614)) + (3 -2) ]]=v167[v169[(1915 -(1568 + 127)) -(100 + 57 + (165 -105)) ]]%v167[v169[11 -(652 -(184 + 461)) ]] ;else v167[v169[415 -(312 + 101) ]]=v167[v169[1894 -(127 + 1764) ]] -v167[v169[11 -(5 + 2) ]] ;end elseif ((((3657 -(168 + 666)) -1658)<=((12549 -8051) -((1969 -(1206 + 601)) + 162))) and (v170<=(27 + 0 + 23))) then if ((v170<=((535 -(92 + 128)) -(234 + (1475 -(1132 + 308))))) or ((1170 + 280)>((213 + 1678) -(4 + 254 + (111 -(32 + 27)))))) then if ((v170<=(105 -61)) or (4303==((4196 -(373 + 341)) -(((1888 -(334 + 54)) -((450 -(96 + 111)) + (1742 -1220))) + 170)))) then v167[v169[2]]=v167[v169[846 -((273 -211) + 781) ]]/v169[(28 + 195) -(21 + 154 + (389 -(215 + 130))) ] ;elseif ((v170==(1686 -(1446 + 195))) or (((16096 -3930) -8986)<(948 + 512 + 1128))) then v167[v169[2]]=v169[(2 -1) + 1 + 1 ]~=(0 -0) ;else v167[v169[(2549 -(453 + 119)) -(821 + (4718 -3564)) ]]=v167[v169[(853 -(698 + 147)) -(14 -9) ]];end elseif (((242 + 9 + (256 -((337 -190) + 72 + 8)))<=(1392 + 1154)) and (v170<=(6 + 42))) then if ((((14695 -10381) -(638 + 2526))<=((8288 -(229 + 25)) -(10044 -4842))) and (v170==((28 -18) + (1336 -(1265 + 34))))) then v167[v169[1184 -(406 + 776) ]]=v63[v169[5 -(7 -5) ]];else local v316=0 + 0 ;local v317;local v318;local v319;local v320;local v321;local v322;local v323;while true do if ((1 + 1)==v316) then v321=nil;v322=nil;v316=2 + 1 ;end if (v316==(256 -(234 + 22))) then v317=437 -(163 + 274) ;v318=nil;v316=1 -0 ;end if (v316==1) then v319=nil;v320=nil;v316=1375 -(100 + 1273) ;end if (v316==3) then v323=nil;while true do if (v317==2) then v322=nil;v323=nil;v317=3 + 0 ;end if (v317==(0 + 0)) then local v422=0 -0 ;while true do if (v422==0) then local v461=0;while true do if (v461==(712 -(362 + 349))) then v422=1 + 0 ;break;end if ((0 + 0)==v461) then v318=0 -0 ;v319=nil;v461=345 -(270 + 74) ;end end end if (v422==(1 -0)) then v317=1 + 0 ;break;end end end if (v317==(375 -(6 + 366))) then while true do if (((3509 + (4092 -2641))>=(((7103 + 618) -5561) + 217)) and (v318==(1499 -(11 + 23 + 936 + 529)))) then local v462=1988 -(1298 + 690) ;while true do if (v462==1) then v318=3 -2 ;break;end if (v462==0) then v319=100 -(74 + 26) ;v320=nil;v462=850 -(144 + 705) ;end end end if (((154 -78)<=(2279 + 203)) and (v318==((1 -0) + (1234 -(323 + 911))))) then local v463=0;while true do if (v463==1) then v318=(74 -(63 + 10)) + 1 + 0 ;break;end if (v463==(0 -0)) then local v513=0;while true do if (v513==0) then v321=nil;v322=nil;v513=3 -2 ;end if ((1920 -(826 + 1093))==v513) then v463=477 -(57 + 419) ;break;end end end end end if ((((9977 -(502 + 421)) -(11596 -4725))>49) and (v318==(6 -4))) then v323=nil;while true do if ((((1945 + 946) -(2946 -(654 + 214)))<(4573 -(2641 -(74 + 200)))) and (v319==((0 + 0) -0))) then v320=0 -(0 + 0) ;v321=nil;v319=2 -1 ;end if ((((8157 -(201 + 30)) -4677)>(1354 -((813 -456) + 24 + 561))) and (v319==((540 -(427 + 112)) + 1 + 0))) then while true do if ((v320==(2 -0)) or (((775 + 595) -((2055 -1185) + (505 -240)))>=((1390 -921) + (1237 -(73 + 549))))) then for v562=(1049 + 102) -((511 -(255 + 164)) + (1563 -(453 + 52))) ,v169[9 -5 ] do local v563=1281 -((1066 -(362 + 484)) + 1061) ;local v564;local v565;local v566;while true do if ((v563==((1346 -(248 + 214)) -((2110 -(1613 + 102)) + 488))) or (((16593 -(389 + 442)) -(13952 -(77 + 1322)))<((19351 -12402) -(19627 -15254)))) then v566=nil;while true do if ((((2205 -(338 + 83)) + 2941)>=2853) and (v564==(0 -(0 + 0)))) then local v604=0;while true do if (v604==1) then v564=(4 -1) -2 ;break;end if (0==v604) then local v626=0 + 0 ;while true do if (v626==(2 -1)) then v604=150 -(72 + 77) ;break;end if (v626==(0 -0)) then v565=0;v566=nil;v626=1;end end end end end if ((((544 -373) -(134 + (1908 -(1568 + 304))))==v564) or ((4072 -((844 -343) + (2747 -1765)))>((18893 -8184) -7692))) then while true do if ((v565==(1399 -(134 + (1515 -957) + 707))) or ((((6442 -(1195 + 740)) -((2691 -(805 + 637)) + (502 -(235 + 230)))) -((966 -(2506 -(1024 + 854))) + 457))>=((14268 + 1231) -10939))) then local v627=0;local v628;while true do if (v627==0) then v628=0 + 0 + 0 ;while true do if ((v628==((375 + 163) -(44 + 284 + ((387 + 1085) -(360 + 903))))) or (((4868 -2575) -((1253 -(236 + 175)) + 144))>=(398 + 22 + 2300))) then v565=2 -1 ;break;end if (((1853 -(2099 -(205 + 886)))<=((6697 -(182 + 216)) -((1576 -(100 + 199)) + (1002 -549)))) and (((0 + 0) -(0 -0))==v628)) then local v660=0;local v661;local v662;while true do if (v660==(0 -0)) then v661=0;v662=nil;v660=1 + 0 ;end if (v660==(3 -2)) then while true do if (0==v661) then v662=407 -((2088 -(580 + 1239)) + (321 -183)) ;while true do if ((v662==((3541 -2785) -(435 + 94 + (583 -356)))) or ((695 + 99 + 2048 + 1014)<((2144 + 2076 + 138) -1516))) then local v682=340 -(177 + 163) ;while true do if (v682==(982 -(800 + 182))) then local v686=0;local v687;while true do if (v686==(728 -(461 + 267))) then v687=0 -0 ;while true do if (v687==(408 -(264 + 144))) then v133=v133 + ((2820 -(1266 + 581)) -(353 + ((962 + 659) -((59 -33) + (1698 -722))))) ;v566=v161[v133];v687=1 -0 ;end if (v687==1) then v682=1;break;end end break;end end end if (v682==(1710 -(1669 + 40))) then v662=1 -(0 + 0) ;break;end end end if ((v662==((951 -707) -((1015 -(457 + 483)) + 168))) or ((6663 -(1317 + 2513))<((1994 -1347) + (1071 -341)))) then v628=(2 -1) + 0 ;break;end end break;end end break;end end end end break;end end end if (((2797 -(866 + (183 -60) + 671))<=((3414 -((927 -298) + (698 -339))) + 1039)) and (v565==((2 -1) -0))) then if (((3093 -1614)<=(5321 -(1015 + 1648))) and (v566[1 + 0 + 0 + (0 -0) ]==((85 -49) + ((31 -12) -(41 -32))))) then v323[v562-(((4 -3) -(0 -0)) -(0 + 0)) ]={v167,v566[(1699 -(556 + 258)) -(716 + 141 + 25) ]};else v323[v562-(470 -(73 + 19 + 67 + 23 + (670 -383))) ]={v62,v566[((1752 -721) -(868 + (990 -(485 + 351)))) -6 ]};end v166[ #v166 + (1915 -(948 + 966)) + 0 ]=v323;break;end end break;end end break;end if ((v563==(0 + 0 + (0 -0))) or ((540 + (6233 -(1405 + 485)))<=((3685 -(1038 + 928)) -(159 + 733)))) then v564=(1965 -957) -((94 -43) + (2760 -1803)) ;v565=nil;v563=(1344 -(347 + 996)) + 0 + 0 ;end end end v167[v169[5 -(8 -5) ]]=v60(v321,v322,v63);break;end if ((v320==((904 -(130 + 116)) -(141 + 516))) or ((2505 + (3711 -(203 + 1685)))==((4870 -2347) + 777 + 381))) then local v550=(0 -0) + (238 -(4 + 234)) ;local v551;while true do if ((v550==0) or (((4667 -(1154 + 719)) + (3922 -2585))>=(23 + 2123 + 2022))) then v551=0 + 0 + 0 ;while true do if ((((865 -368) + (3879 -(743 + 544)))>=(528 + 90 + 367)) and (v551==(1 + 0 + (0 -0)))) then v320=(12 -6) -(921 -(393 + 524)) ;break;end if ((v551==((0 + 0) -(1046 -((1148 -479) + 45 + 332)))) or ((23843 -18854)<((3949 -2602) + 960))) then local v599=0 + 0 ;while true do if (v599==(1 + 0)) then v551=210 -(110 + 20 + 79) ;break;end if (v599==(304 -(232 + 72))) then v323={};v322=v23({},{[v7("\228\60\133\178\175\119\195","\187\99\236\220\203\18")]=function(v615,v616)local v630=(176 -70) -((1206 -(550 + 614)) + 64) ;local v631;while true do if (((2231 + 1211)==(468 + 234 + 1681 + 1059)) and (v630==(0 + 0 + (1333 -(1166 + 167))))) then local v645=0;while true do if ((232 -(124 + 108))==v645) then local v663=1274 -(667 + 607) ;while true do if (v663==(0 + 0)) then v631=v323[v616];return v631[(9 -7) -(1 + 0) ][v631[(1965 -(937 + 63)) -(910 + ((228 -83) -(779 -(601 + 86)))) ]];end end end end end end end,[v7("\33\248\89\116\237\223\16\195\82\105","\126\167\55\17\154\182")]=function(v615,v616,v617)local v632=0 + 0 ;local v633;local v634;local v635;while true do if (v632==1) then v635=nil;while true do if (((1363 + 81)>=(1088 -(222 + 381))) and (v633==((829 -(722 + 106)) -0))) then while true do if (((1057 -671)<=(116 + 1 + 573)) and (v634==(0 + 0))) then v635=v323[v616];v635[(504 -(162 + 339)) -(530 -(88 + 440)) ][v635[(2 + 3) -(1 + 2) ]]=v617;break;end end break;end if ((v633==((0 -0) + 0)) or ((4557 -1682)<=(3775 -(503 + (1576 -(8 + (1169 -848))))))) then v634=(0 + 0 + 0 + 0) -(0 -0) ;v635=nil;v633=1 + 0 ;end end break;end if (v632==(0 + 0)) then local v646=0 + 0 ;while true do if (v646==0) then v633=0;v634=nil;v646=3 -2 ;end if (v646==(432 -(265 + 166))) then v632=3 -2 ;break;end end end end end});v599=1 + 0 ;end end end end break;end end end if ((((1664 -(1095 + 569)) + (1092 -(1024 + 68)))==v320) or (((4455 + 5495) -(7704 -(783 + 399)))<(78 + 501 + (1039 -251)))) then local v552=0;local v553;local v554;local v555;while true do if (v552==(689 -(355 + 334))) then v553=0 -0 ;v554=nil;v552=1 + 0 ;end if ((234 -(194 + 39))==v552) then v555=nil;while true do if (v553==(0 + 0)) then local v600=1260 -(43 + 1217) ;while true do if (v600==1) then v553=1;break;end if (v600==(291 -(237 + 54))) then v554=0 + 0 ;v555=nil;v600=1;end end end if (v553==1) then while true do if ((((0 -0) -(0 -0))==v554) or (((318 + (16635 -11081)) -(1074 + 744))>(((3527 + 10297) -(10037 -(1418 + 234))) -((399 -210) + (3233 -2391))))) then v555=60 -(42 + ((2237 -(1446 + 48)) -((1312 -(605 + 247)) + 265))) ;while true do if ((v555==((1 -0) + (0 -0))) or ((492 + 214)>(119 + 4730))) then v320=(2 -1) + (53 -(34 + 19)) ;break;end if ((v555==(0 + 0 + 0 + 0)) or (((2060 -(626 + 1036)) + 184 + 1269)==((4722 -(19 + 27)) -((627 -467) + 7)))) then local v640=(1133 -(1002 + 131)) -0 ;while true do if ((((1458 + 2423) -(345 + 504))>((414 + 3509) -(1924 + 691))) and (v640==((914 -(667 + 246)) + (0 -0)))) then v555=1 + 0 ;break;end if (((2008 -(85 + 58 + (1561 -713)))>((1051 -573) + (20 -(10 + 1)))) and (v640==((1936 -(1727 + 209)) + (1157 -(1032 + 125))))) then local v656=567 -(153 + 414) ;local v657;while true do if (v656==(0 + 0)) then v657=0 + 0 ;while true do if (v657==(1 + 0)) then v640=(2 -1) + 0 + 0 ;break;end if (v657==0) then v321=v162[v169[7 -4 ]];v322=nil;v657=1;end end break;end end end end end end break;end end break;end end break;end end end end break;end if ((v319==(1 + (422 -(11 + 411)))) or (3421>=((49577 -37465) -7299))) then v322=nil;v323=nil;v319=(393 -(237 + 147)) -(3 + 4) ;end end break;end end break;end if (v317==1) then v320=nil;v321=nil;v317=1 + 1 ;end end break;end end end elseif ((v170>((60 + 8) -19)) or (2225<(407 + 20))) then local v324=0;local v325;local v326;local v327;local v328;local v329;local v330;local v331;while true do if (v324==(1 + 1)) then v329=nil;v330=nil;v324=281 -(22 + 256) ;end if (v324==1) then v327=nil;v328=nil;v324=2 + 0 ;end if (v324==(4 -1)) then v331=nil;while true do if (v325==(1 -0)) then v328=nil;v329=nil;v325=5 -3 ;end if (v325==3) then while true do if ((v326==((1 -0) + ((342 + 491) -(542 + (1023 -732))))) or ((46 + 101 + 359)>(19 + 924 + (1915 -1289)))) then local v464=0 + 0 ;local v465;while true do if (v464==(0 + 0)) then v465=0 + 0 ;while true do if (v465==(4 -3)) then v326=(1092 + 436) -(((5223 -3297) -((1360 -(207 + 1133)) + (2247 -(614 + 502)))) + (2730 -1979)) ;break;end if (v465==(0 + 0)) then v329=nil;v330=nil;v465=3 -2 ;end end break;end end end if (((4386 -(55 + 6))>=((4835 -3094) -((873 -651) + 146))) and (v326==(21 -(11 + 8)))) then v331=nil;while true do if (((1644 + 2751)>(8195 -(7192 -(221 + 539)))) and (v327==((1093 -753) -((350 -110) + 98)))) then for v532=v328,v134 do local v533=0 -0 ;local v534;local v535;while true do if (v533==1) then while true do if (((2453 + 909 + 1341 + 25)==((407 -72) + (5652 -(302 + 957)))) and (v534==((0 -0) + 0 + 0))) then v535=(2883 -(723 + 999)) -(878 + (2174 -(1144 + 747))) ;while true do if (((1589 + 2626)==((4274 -(1397 + 47)) + 1385)) and (v535==(640 -(10 + 13 + (1709 -1092))))) then v331=v331 + (376 -(206 + 169)) ;v167[v532]=v329[v331];break;end end break;end end break;end if (v533==0) then v534=(2667 -(291 + 1015)) -((898 -390) + 476 + 377) ;v535=nil;v533=1 + 0 ;end end end break;end if ((3842==3842) and (v327==((1927 -411) -(138 + 367 + (2493 -1483))))) then local v514=0 -0 ;local v515;local v516;while true do if (v514==0) then v515=0 -0 ;v516=nil;v514=1 + 0 ;end if (v514==1) then while true do if (v515==(0 + 0)) then v516=0;while true do if ((((2405 -1244) + 983 + (4346 -3153))>=((2257 + 370) -(734 + 341))) and (v516==((1277 -(847 + 430)) -0))) then local v601=0;while true do if (v601==(436 -(70 + 365))) then v516=1;break;end if ((0 + 0)==v601) then v134=(v330 + v328) -((1740 -(1594 + 145)) + 0 + 0) ;v331=0 + 0 ;v601=2 -1 ;end end end if ((v516==((9 -5) -(5 -2))) or ((1000 + ((4443 -(144 + 846)) -(184 + 162 + (2643 -1503))))<(2748 + 175))) then v327=1 + 1 ;break;end end break;end end break;end end end if (((3567 -((544 -(73 + 102)) + (1631 -(697 + 660))))>=((947 + 1653) -((4523 -3474) + ((1252 -(93 + 439)) -((820 -502) + (53 -13)))))) and (v327==(1628 -((2672 -1231) + 187)))) then local v517=0;local v518;while true do if (v517==(0 -0)) then v518=(4632 -2982) -(837 + 458 + (996 -(521 + 120))) ;while true do if ((4263>((1667 -(866 + 1)) -(153 + (351 -121) + 28))) and (v518==((311 + 7) -((367 -134) + (134 -(8 + 41)))))) then local v580=0;local v581;while true do if (v580==0) then v581=0 + 0 ;while true do if (((((129 -(54 + 74)) -(968 -(193 + 775))) + 0 + 0)==v581) or (((8496 -4456) -(34 + 6))<((2660 -(27 + 14)) -((2700 -1975) + (1338 -(1276 + 56)))))) then v518=4 -(3 + 0) ;break;end if ((v581==((2124 -1261) -(72 + 8 + 783))) or ((11805 -(5105 + 1761))<((386 + 97) -(58 + 272)))) then local v618=0;while true do if (v618==(0 -0)) then v328=v169[576 -((2044 -1478) + (717 -(420 + 289))) ];v329,v330=v164(v167[v328](v26(v167,v328 + (2 -1) + (1655 -(933 + 722)) ,v134)));v618=1 + 0 ;end if (v618==(670 -(354 + 315))) then v581=4 -3 ;break;end end end end break;end end end if (((3236 -(860 + 179))<=((11329 -(125 + 344)) -((5712 -1278) + 1579))) and (v518==1)) then v327=1 -(1987 -(1573 + 414)) ;break;end end break;end end end end break;end if (((3197 -(253 + 27))>=2021) and ((0 -(0 -0))==v326)) then local v466=1194 -(571 + 623) ;while true do if (0==v466) then v327=0 -((524 -(339 + 185)) + (0 -0)) ;v328=nil;v466=1;end if (v466==(3 -2)) then v326=1080 -((309 -197) + 967) ;break;end end end end break;end if (v325==(1 + 1)) then v330=nil;v331=nil;v325=1186 -(1053 + 130) ;end if (v325==(0 -0)) then v326=(0 -0) -0 ;v327=nil;v325=436 -(121 + 314) ;end end break;end if (v324==(0 -0)) then local v390=0;while true do if (v390==(0 -0)) then v325=0 + 0 ;v326=nil;v390=1208 -(512 + 695) ;end if (v390==(4 -3)) then v324=1 -0 ;break;end end end end else v167[v169[4 -2 ]][v169[(4208 -3036) -(55 + ((1994 + 516) -(363 + 813 + (1820 -(955 + 645))))) ]]=v167[v169[(9 -5) + 0 ]];end elseif ((v170<=((1737 -(734 + 570)) -((1341 -(885 + 407)) + 84 + 246))) or ((6099 -(363 + 1073))<(1566 + 38))) then if (((944 + 1476)>((452 -(12 + 160)) + 344)) and (v170<=(843 -((178 -127) + 149 + 591)))) then if ((v170>((198 -60) -(146 -59))) or (((6229 -3263) -((208 -136) + (319 -110)))>(21566 -16824))) then local v334=0 -0 ;local v335;local v336;local v337;local v338;local v339;local v340;while true do if (v334==(120 -(8 + 109))) then while true do if (v335==(1534 -(1458 + 74))) then v340=nil;while true do if ((v336==(0 + (0 -0))) or (((123 + 4688) -((2326 -(384 + 1133)) + (452 -133)))<=(1257 -(137 + 219 + 778)))) then local v467=453 -(31 + 422) ;while true do if (v467==(1 -0)) then v336=1 + 0 + (0 -0) ;break;end if (v467==(0 + 0)) then local v519=0;while true do if (v519==(555 -(266 + 288))) then v467=1 + 0 ;break;end if (0==v519) then v337=(2943 -(551 + 1007)) -(78 + (1951 -(182 + 462))) ;v338=nil;v519=1;end end end end end if ((v336==((4193 -3150) -(474 + 459 + (146 -37)))) or (((1356 -(750 + 178)) -((450 -(314 + 105)) + 76))>(4382 -(1697 + 154)))) then local v468=(1466 -(303 + 826)) -(229 + 65 + 43) ;while true do if ((((3337 -(1005 + 226)) -((1789 -(990 + 394)) + (2197 -1387)))<(8105 -3585)) and (v468==((630 -(140 + 132 + 356)) -(1 + 0)))) then v336=1 + 1 ;break;end if (((((11669 -(1171 + 349)) -(6310 -(237 + 47))) -(11 + 5 + (3321 -2624)))>((406 -(133 + 131)) + (173 -(46 + 47)))) and (v468==(1826 -(511 + 1315)))) then local v520=0 -0 ;while true do if (v520==(0 + 0)) then v339=nil;v340=nil;v520=1295 -(15 + 1279) ;end if (1==v520) then v468=(2 -1) + 0 ;break;end end end end end if ((v336==((5 + 0) -3)) or (((909 -(1706 -1118)) + 3914 + 223)<=((1627 + 4891) -3177))) then while true do if (((((4243 -(940 + 1005)) -(75 + 42 + 104 + 622)) + (6276 -4145))>((1306 -(227 + 758)) + 40 + 845)) and (v337==((1607 -(657 + 950)) + 0))) then local v521=0 -0 ;local v522;local v523;while true do if (v521==0) then v522=0 + 0 + 0 + 0 ;v523=nil;v521=1844 -(1073 + 770) ;end if (v521==(1 + 0)) then while true do if ((v522==((1165 -(172 + 993)) + (1634 -(1475 + 159)))) or (2131<=(2678 -(614 + (1330 -683))))) then v523=(0 + 0) -0 ;while true do if (((12502 -8617)>=(1889 -((1011 -(229 + 106)) + (968 -(533 + 211))))) and (v523==(1 -(0 + (1289 -(54 + 1235)))))) then v337=1;break;end if (((5223 -((2432 -1643) + 1113))>(8226 -5353)) and (((0 -0) -(0 -0))==v523)) then local v602=(5128 -3362) -(656 + (1286 -(78 + 98))) ;while true do if (((288 + 294 + (5854 -3973))>(2127 + 23 + 16)) and (v602==(0 + 0))) then local v619=0;while true do if (v619==(931 -(78 + 853))) then local v642=0 + 0 ;while true do if (v642==(0 + 0)) then v338=v169[(1 + 3) -(1508 -(26 + 1480)) ];v339=v167[v338 + ((32 -25) -(8 -3)) ];v642=1;end if (v642==(1315 -(625 + 689))) then v619=1;break;end end end if (v619==(1 -0)) then v602=(1770 -(217 + 1552)) -(354 -(300 + 54)) ;break;end end end if ((v602==(3 -2)) or (((5998 -(332 + 742)) -(756 + 503 + 649))>((5133 -2540) + (3679 -1947)))) then v523=1;break;end end end end break;end end break;end end end if (((1612 -(392 + 290))<=(4348 -(259 + 897 + (2316 -(1202 + 422))))) and (v337==(1089 -(840 + 248)))) then local v524=111 -(107 + 4) ;local v525;while true do if (v524==0) then v525=(0 -0) + 0 ;while true do if ((v525==(((603 -325) + (138 -100)) -((1375 -(497 + 595)) + 8 + (120 -95)))) or (3887<(2953 -(7471 -5651)))) then local v582=0 -0 ;local v583;while true do if (0==v582) then v583=1763 -(385 + 1378) ;while true do if ((v583==((894 -(174 + 719)) -(1869 -(1544 + 325)))) or (3733<=((4027 -((137 -64) + (72 -55))) -((4130 -2623) + 329)))) then v525=(1579 -((997 -(385 + 202)) + (4425 -3257))) -0 ;break;end if (((0 -(0 -0))==v583) or (((3198 -(620 + 690)) -(3239 -2478))>=((3507 -(288 + 1402)) + (1931 -(163 + 550))))) then local v620=0 + 0 ;while true do if ((0 + 0)==v620) then v340=v167[v338] + v339 ;v167[v338]=v340;v620=1;end if ((3 -2)==v620) then v583=3 -(5 -3) ;break;end end end end break;end end end if ((v525==(1752 -(450 + 1301))) or (((3749 -(139 + 154)) -(3049 -(51 + 789)))>((110 -55) + (6102 -3352)))) then v337=(4 -2) + 0 ;break;end end break;end end end if (((((7885 -(116 + 1262)) + 4672 + 1030) -8756)<(2480 + (1334 -(58 + 101)) + (3279 -(1172 + 789)))) and (v337==(5 -(11 -8)))) then if (((322 + 151)<=((3897 + 1110) -1160)) and (v339>((0 + 0) -((0 -0) -(0 + 0))))) then if ((((3028 + 806) -((2659 -944) + 495 + 370))>=769) and (v340<=v167[v338 + 1 ])) then local v567=0 + 0 ;local v568;local v569;while true do if (v567==(0 + 0)) then v568=0 + 0 ;v569=nil;v567=1 -0 ;end if (1==v567) then while true do if (v568==(0 -0)) then v569=0 + 0 + 0 ;while true do if (((2057 -((3349 -(802 + 999)) + 76 + 110))<(1993 + 444 + (5911 -4105))) and (v569==(0 -(0 + 0)))) then v133=v169[1 + 0 + 2 ];v167[v338 + (8 -5) ]=v340;break;end end break;end end break;end end end elseif (((3873 -(110 + 86 + 177))==((4997 -1643) + 11 + 135)) and (v340>=v167[v338 + ((1 + 0) -(0 -0)) ])) then local v570=0 -((0 -0) -(0 -0)) ;local v571;while true do if ((((569 + 12) -(843 -((1001 -540) + 228)))<((7377 -3018) -(1602 + 631))) and (v570==(0 + 0))) then v571=(748 -(287 + 461)) -(1003 -(903 + 100)) ;while true do if ((((6081 + 81) -4515)>(721 + 207 + 390 + 263)) and (v571==(0 -(0 + 0)))) then v133=v169[13 -10 ];v167[v338 + ((556 + 342) -((2602 -(413 + 1489)) + (489 -294))) ]=v340;break;end end break;end end end break;end end break;end end break;end if (v335==1) then local v423=0 -0 ;while true do if (v423==0) then local v469=0 -0 ;while true do if (v469==(0 -0)) then v338=nil;v339=nil;v469=1 + 0 ;end if (v469==(1823 -(819 + 1003))) then v423=1 + 0 ;break;end end end if (v423==(1395 -(158 + 1236))) then v335=2;break;end end end if (0==v335) then local v424=1106 -(502 + 604) ;while true do if (v424==(0 -0)) then v336=(403 -(21 + 382)) -(0 + 0) ;v337=nil;v424=929 -(478 + 450) ;end if (v424==1) then v335=886 -(761 + 124) ;break;end end end end break;end if ((433 -(54 + 379))==v334) then v335=0 + 0 ;v336=nil;v334=1;end if (v334==(3 -1)) then v339=nil;v340=nil;v334=3;end if (v334==1) then v337=nil;v338=nil;v334=2;end end else local v341=0 -0 ;local v342;local v343;local v344;while true do if (v341==(0 -0)) then v342=((935 -(160 + 386)) -(140 + 100 + 15 + 134)) + 0 ;v343=nil;v341=1624 -(533 + 1090) ;end if (v341==1) then v344=nil;while true do if (((2403 -(8 + (19 -10)))==2386) and (v342==((696 -(56 + 638)) -(131 -(120 + 10))))) then while true do if ((v343==(0 + 0 + 0 + 0)) or (((263 + 1939) -(2783 -(395 + 812)))>((3598 -(797 + 504)) + (1871 -(184 + 60))))) then v344=v169[1 + 1 ];v167[v344](v26(v167,v344 + ((1237 -(361 + 873)) -(3 -1)) ,v134));break;end end break;end if (((3600 -658)==(5459 -2517)) and (v342==(0 -0))) then v343=0 -(0 -0) ;v344=nil;v342=(1831 -(342 + 1486)) -(1692 -(1341 + 349)) ;end end break;end end end elseif ((v170>53) or (((19 -11) + 3 + 0 + 0)>=((5285 -2106) + 307))) then local v345=0 + 0 ;local v346;local v347;local v348;while true do if (v345==(0 + 0)) then v346=(1395 -(299 + 1096)) + 0 ;v347=nil;v345=1 + 0 ;end if (v345==(1 + 0)) then v348=nil;while true do if ((((849 + 1855) -(1219 + 140))<((9858 -(1046 + 291)) -(9253 -5125))) and (v346==(1 + 0))) then v167[v347 + (2 -1) + (526 -(398 + 128)) ]=v348;v167[v347]=v348[v169[((3 + 10) -4) -(743 -(409 + 329)) ]];break;end if ((v346==((0 -0) + (181 -(61 + 120)))) or (((4063 + 1560) -(((1462 -(59 + 106)) -(2631 -1884)) + (521 -387)))<=((5733 -4142) + (2432 -(1189 + 746))))) then local v428=0 + 0 ;while true do if ((v428==(2 -1)) or ((((12872 -(511 + 1339)) -(377 + 328 + 1038)) -(3451 + 708 + 2005))<(2334 -(825 + 223)))) then v346=(10 -(1 + 6)) -((1974 -(96 + 1457)) -((1864 -(1532 + 266)) + 353)) ;break;end if (((2242 + 97 + 336)<=(4555 -((378 -100) + (1879 -(192 + 1638))))) and (v428==(0 -(0 -0)))) then v347=v169[(561 + 491) -(39 + 652 + (1284 -(17 + 908))) ];v348=v167[v169[((7063 -2620) -(470 + 2765)) -(308 + 309 + (1495 -(531 + 376))) ]];v428=1749 -((821 -(15 + 80)) + (1644 -622)) ;end end end end break;end end else local v349=0;local v350;local v351;local v352;local v353;local v354;local v355;local v356;while true do if (v349==(244 -(70 + 172))) then v354=nil;v355=nil;v349=3 + 0 ;end if (3==v349) then v356=nil;while true do if ((v350==(0 + 0)) or ((598 + 269 + 1217)==3709)) then local v429=0 + 0 ;local v430;while true do if (v429==(0 -0)) then v430=0 + 0 ;while true do if (v430==(91 -(39 + 51))) then v350=(407 -(31 + 375)) + (909 -(520 + 389)) ;break;end if (v430==(0 + 0)) then v351=1417 -(959 + 458) ;v352=nil;v430=1 + 0 ;end end break;end end end if ((((3005 + 273) -(403 + (710 -(9 + 9))))>=961) and (v350==((17 -10) -(674 -(231 + 438))))) then local v431=0;while true do if (v431==0) then v355=nil;v356=nil;v431=1;end if (v431==(883 -(99 + 783))) then v350=(11 -6) -((1564 -287) -(1194 + 6 + 75)) ;break;end end end if ((v350==(2 + 1)) or ((3005 -(305 + 1139))>=(2168 + (273 -103)))) then while true do if ((v351==((226 + 93 + (134 -70)) -(((584 + 382) -((744 -(178 + 259)) + 347)) + ((2713 -(491 + 268)) -((980 -(173 + 185)) + (2655 -(1346 + 46))))))) or ((1343 -((1598 -(703 + 781)) + 101 + 10))==((7608 + 12472) -(52270 -36391)))) then local v473=(0 -0) -0 ;while true do if ((((2764 -1210) -(175 + 835 + 167 + 376))==v473) or (1873>=((22866 -16963) -(417 + (713 -(98 + 70)))))) then v351=(11 -(1811 -(1039 + 767))) -(735 -(141 + 591)) ;break;end if ((((426 + 441) -(280 + 587))==v473) or (((1626 + 328) -(1 + 23 + 333 + 465))>((391 + 2487) -((2199 -1547) + 686 + 173)))) then for v536=297 -(147 + 149) ,v353 do v167[v354 + v536 ]=v355[v536];end v356=v355[(868 -(265 + 602)) + (762 -(211 + (1779 -(469 + 759)))) ];v473=407 -(62 + 344) ;end end end if (((1033 + 1217)==((5220 + 783) -(3266 + 487))) and (v351==((338 -(91 + 246)) + 1 + 1))) then if (v356 or (((349 -205) -(60 + 7))>((3326 + 863) -(((2996 -(619 + 260)) -(3511 -2257)) + 792)))) then local v503=0 + 0 ;local v504;local v505;local v506;while true do if (v503==(1632 -(1487 + 145))) then local v541=826 -(487 + 339) ;while true do if (v541==(2 -1)) then v503=1 + 0 ;break;end if (v541==(0 -0)) then v504=(27 + 52 + 38 + 34) -((569 -451) + ((33 + 28) -28)) ;v505=nil;v541=1 + 0 ;end end end if (v503==(1 -0)) then v506=nil;while true do if ((v504==((460 + 1381) -(134 + 1706))) or (((207 + (7271 -4843)) -(20 + 38 + 70))==(131 + 2573 + 20))) then while true do if ((v505==0) or (((4170 -(1039 + 372)) -((159 -100) + 195))>=((5150 -(472 + 309)) -(244 + 1384)))) then v506=(60 -(59 + 1)) + 0 + 0 ;while true do if ((v506==(0 + 0 + 0 + 0)) or ((((9410 -4105) -((959 -(726 + 167)) + (2336 -(107 + 1348)))) -(204 + 192 + (59 -19)))>(6198 -(332 + 358 + (2852 -2235))))) then v167[v354]=v356;v133=v169[(6 + 3) -(6 + 0) ];break;end end break;end end break;end if ((v504==((1714 -(360 + 1354)) + 0 + 0)) or ((1068 + 1044 + 98)==((20225 -11928) -3884))) then v505=((5510 -4123) -(615 + 772)) + (0 -0) ;v506=nil;v504=1131 -(502 + 628) ;end end break;end end else v133=v133 + ((1 + 2) -2) ;end break;end if ((((3260 -(14 + 78)) + (3610 -2436))<=4868) and (v351==((1 -0) + (0 -0)))) then v354=v352 + ((777 + 533) -(607 + (1714 -(128 + 885)))) ;v355={v167[v352](v167[v352 + ((5 -1) -(9 -6)) ],v167[v354])};v351=(603 + 69) -(625 + (214 -169)) ;end if (((((254 + 5234) -(6 + 63 + 287 + 1546)) -2291)<=(((3594 + 1880) -(505 + 212 + (1240 -663))) -(92 + 145 + 57))) and (((4171 -2695) -(1341 + (556 -(224 + 197))))==v351)) then local v474=0 + 0 ;while true do if (v474==1) then v351=((1 + 0) -(0 -0)) + ((1120 + 10) -(363 + 227 + (1926 -(294 + 1092)))) ;break;end if (v474==0) then local v527=0;while true do if (v527==0) then v352=v169[35 -(13 + 20) ];v353=v169[(7 -2) -1 ];v527=1545 -(58 + 1486) ;end if (v527==(1 -0)) then v474=1;break;end end end end end end break;end if ((v350==((1044 -(84 + 957)) -(5 -3))) or (((13103 -9360) + (3567 -2361))<81)) then local v432=0;while true do if (v432==(1 -0)) then v350=(1 -0) + ((705 + 585) -(1266 + 23)) ;break;end if (v432==(0 + 0)) then v353=nil;v354=nil;v432=1 + 0 ;end end end end break;end if (v349==0) then v350=0 + (459 -(136 + 323)) + 0 ;v351=nil;v349=765 -(568 + 196) ;end if (v349==(1 + 0)) then v352=nil;v353=nil;v349=2;end end end elseif ((v170<=((42 -17) + (521 -(6 + 140 + 344)))) or (4173<(2096 -(821 + (2811 -(1617 + 42)))))) then if ((v170>(52 + 3)) or ((1527 -((2027 -1371) + (2008 -(1711 + 251))))>((31469 -19678) -7446))) then local v357=(994 -(989 + 5)) + 0 ;local v358;while true do if ((((0 -0) -(0 -0))==v357) or (((5760 -((952 -517) + 603)) -(669 + 286))<=(83 + 124 + 26 + 0 + 441 + 1056))) then v358=v169[(2145 -(767 + 643)) -((318 -190) + 596 + 9) ];v167[v358]=v167[v358](v167[v358 + (1711 -(326 + 1384)) ]);break;end end else do return v167[v169[(681 + 254) -((446 -289) + (1012 -236)) ]];end end elseif ((v170>(((2622 -(120 + 286)) -842) -(1147 + 18 + 152))) or ((1288 + 3109)<=((1835 + 470) -(479 + (2205 -(1070 + (1305 -391))))))) then local v359=0 + 0 ;local v360;local v361;while true do if ((2762<=(5079 -(142 + 22 + (328 -186)))) and (v359==(1 + 0))) then while true do if ((v360==((0 -0) + 0)) or (((11663 -(610 + 213)) -7571)<((4196 -(408 + 1512)) -((1020 -291) + 281)))) then v361=v169[2 -(0 + 0) ];do return v26(v167,v361,v361 + v169[(3545 -(278 + 1510)) -(454 + ((2148 + 998) -(285 + 334 + (2472 -(663 + 582))))) ] );end break;end end break;end if ((((0 + 0) -(0 + 0))==v359) or ((273 + 1193)>((1986 + 1418) -(287 + 17 + 820)))) then local v393=0;local v394;while true do if (v393==0) then v394=0;while true do if ((v394==(((1796 -(1114 + 398)) + (545 -376)) -(21 + 432))) or ((566 + 1697)>=((10771 + 323) -(10279 -3122)))) then v360=(733 -(390 + 31)) -(175 + (412 -((200 -114) + (290 -101)))) ;v361=nil;v394=(1940 -(1181 + 758)) -0 ;end if ((v394==((3316 -2040) -(538 + (1834 -(587 + 510))))) or (((22960 -15687) -(1257 + 1600))<=(6799 -(3690 + 1162)))) then v359=(7 -4) -2 ;break;end end break;end end end end else local v362=((2135 -(924 + 847)) -(251 + (1727 -(634 + 980)))) + (0 -(0 -0)) ;local v363;local v364;local v365;while true do if (((5939 -(4232 -3181))>=((1328 + 1542) -(1238 + 393))) and (v362==(0 + 0 + (0 -0)))) then local v395=0 -0 ;while true do if (v395==(0 + 0)) then v363=1029 -((1212 -538) + (809 -454)) ;v364=nil;v395=916 -(70 + 845) ;end if (v395==(1131 -(1014 + 116))) then v362=2 -1 ;break;end end end if ((((3121 -(336 + 199)) -((352 -229) + 297 + 22))<=((8348 -(535 + 358)) -3661)) and (v362==(195 -(109 + 85)))) then v365=nil;while true do if ((v363==(1372 -((1829 -(792 + 247)) + (1967 -(273 + 1112))))) or (((979 + 375) -438)==((3771 -(16 + 9)) -(212 + 139 + 902 + 59)))) then v364=((0 + 0) -0) -(0 + 0) ;v365=nil;v363=1962 -(278 + 1683) ;end if ((2394<=(17187 -12682)) and (((4580 -2850) -((2049 -439) + 119))==v363)) then while true do if ((((4171 + 454 + 3355) -(1799 + 2813))<=(1599 + 1226 + (3601 -2852))) and (v364==((1426 -(694 + 373)) -(35 + 11 + (763 -450))))) then v365=v169[2 -0 ];do return v26(v167,v365,v134);end break;end end break;end end break;end end end v133=v133 + 1 ;break;end end break;end end end break;end end end;v132=1463 -(1432 + 28) ;end end end;end end end end end return v60(v59(),{},v36)(...);end;vv22(),...);break;end if (v12==3) then local v37=0;local v38;while true do if (v37==(0 -0)) then v38=0;while true do if (v38==0) then v25=select;v26=unpack or table.unpack ;v38=1123 -(981 + 141) ;end if (v38==2) then v12=2 + 2 ;break;end if (v38==(1 + 0)) then v27=tonumber;v28=nil;v38=2 + 0 ;end end break;end end end if (v12==2) then local v39=0;while true do if (v39==(1320 -(540 + 779))) then local v102=0 + 0 ;while true do if (v102==0) then v23=setmetatable;v24=pcall;v102=154 -(105 + 48) ;end if (v102==(2 -1)) then v39=1720 -(1710 + 8) ;break;end end end if (v39==0) then v21=math.ldexp;v22=getfenv or function()return _ENV;end ;v39=1;end if (v39==(2 + 0)) then v12=1545 -(1443 + 99) ;break;end end end if ((1 + 0)==v12) then v17=string.gsub;v18=string.rep;v19=table.concat;v20=table.insert;v12=2;end end break;end if (v11==2) then v20=nil;v21=nil;v22=nil;v23=nil;v11=3;end if ((392 -(163 + 226))==v11) then v24=nil;v25=nil;v26=nil;v27=nil;v11=4;end if (v11==1) then local v30=0 -0 ;while true do if (v30==2) then v11=2;break;end if (v30==(2 -1)) then v18=nil;v19=nil;v30=203 -(149 + 52) ;end if (v30==0) then v16=nil;v17=nil;v30=1 + 0 ;end end end if (v11==0) then local v31=1263 -(493 + 770) ;while true do if (v31==(38 -(8 + 28))) then v11=2 -1 ;break;end if (v31==1) then v14=nil;v15=nil;v31=2;end if (0==v31) then v12=1006 -(64 + 942) ;v13=nil;v31=1 -0 ;end end end end end
